{
  "version": 3,
  "sources": ["../src/table/_cc-min.ts", "../src/_eval.ts", "../src/_cs-lab.ts", "../src/_cs-yiq.ts", "../src/_cs-lrgb.ts", "../src/_cs-yxy.ts", "../src/_cs-lms.ts", "../src/table/_hc2xy-real-min.ts", "../src/_cs-pccs.ts", "../src/_cs-munsell.ts", "../src/_cs-xyz.ts", "../src/_cs-rgb.ts", "../src/_sim-color-vision.ts", "../src/_color.ts", "../src/_cs-function.ts", "../src/_sim-age.ts"],
  "sourcesContent": ["export const _CC_TABLE = {\n\t 2: '...................5.................557................557...............55777.............55.777............55577777...........55577777..........5557777777........55511..6767.......333.116666666......3331.666666.......3333116666........33331116...........33333.............3333..............33...................................................................................',\n\t 5: '5..................55................557...............55777..............55777.............5577777...........555777777.........5557777777.........55a77777777.......555aa77777727.....555aaa66666666....3353aa666666666...33333a6666666......33333366666.......333333366.........33333333..........333333.............3333..............33................3..............................',\n\t10: '5..................57................557...............55777..............557777............5577777...........555777777.........55577777788.......555aa777..88.......555aa77...222.....555aa.68668.222...5333aa666666999...33333a66666699....3333333666666......3333333666........333333336.........3333333...........333333.............333...............33................3............',\n\t20: '.......................................77..............55777..............557777............557777............557777788.........55577778888.......555577.88888.......555.78888888......555aa.8888882.....5533.a888999999...33333366999999....3333333669999......33333334.99.......333333344.........33333333..........333333............33333..............33................3............',\n\t30: '..........................................................................5.77..............55777.............55777.............55577.8...........55557788...........55557888..........555508888.........3535348888........33333449999.......333333449999.......33333344449.......333333444.........33333334..........333333............33333..............333...............3............',\n\t40: '..............................................................................................77..............55577.............55577.............555578.............5550.8............5555088...........5333008...........35333449..........333333444..........333334444.........333333444.........33333344..........3333333...........33333..............333...............3............'\n};\n", "/**\n * Evaluation Methods\n *\n * @author Takuto Yanagida\n * @version 2024-07-25\n */\n\nimport { _CC_TABLE } from './table/_cc-min';\nimport { Triplet } from './_triplet';\n\nexport class Evaluation {\n\n\n\t// Calculation of the conspicuity degree -----------------------------------\n\n\n\t/**\n\t * Calculate the conspicuity degree.\n\t * Reference: Effective use of color conspicuity for Re-Coloring system,\n\t * Correspondences on Human interface Vol. 12, No. 1, SIG-DE-01, 2010.\n\t * @param {number[]} lab L*, a*, b* of CIELAB color\n\t * @return {number} Conspicuity degree [0, 180]\n\t * TODO Consider chroma (ab radius of LAB)\n\t */\n\tstatic conspicuityOfLab([, as, bs]: Triplet): number {\n\t\tconst rad = (bs > 0) ? Math.atan2(bs, as) : (Math.atan2(-bs, -as) + Math.PI);\n\t\tconst H = rad / (Math.PI * 2) * 360;\n\t\tconst a = 35;  // Constant\n\t\tif (H < a) return Math.abs(180 - (360 + H - a));\n\t\telse return Math.abs(180 - (H - a));\n\t}\n\n\n\t// Calculation of the color difference -------------------------------------\n\n\n\t/**\n\t * Calculate distance of two vectors\n\t * @param {number[]} vs1 vector 1\n\t * @param {number[]} vs2 vector 2\n\t * @return {number} Distance\n\t */\n\tstatic distance([v11, v12, v13]: Triplet, [v21, v22, v23]: Triplet): number {\n\t\treturn Math.sqrt((v11 - v21) * (v11 - v21) + (v12 - v22) * (v12 - v22) + (v13 - v23) * (v13 - v23));\n\t}\n\n\t/**\n\t * Color difference calculation method by CIE 76\n\t * @param {number[]} lab1 L*, a*, b* of CIELAB color 1\n\t * @param {number[]} lab2 L*, a*, b* of CIELAB color 2\n\t * @return {number} Color difference\n\t */\n\tstatic CIE76([ls1, as1, bs1]: Triplet, [ls2, as2, bs2]: Triplet): number {\n\t\treturn Math.sqrt((ls1 - ls2) * (ls1 - ls2) + (as1 - as2) * (as1 - as2) + (bs1 - bs2) * (bs1 - bs2));\n\t}\n\n\t/**\n\t* Color difference calculation method by CIEDE2000\n\t* Reference: http://www.ece.rochester.edu/~gsharma/ciede2000/ciede2000noteCRNA.pdf\n\t* http://d.hatena.ne.jp/yoneh/20071227/1198758604\n\t * @param {number[]} lab1 L*, a*, b* of CIELAB color 1\n\t * @param {number[]} lab2 L*, a*, b* of CIELAB color 2\n\t * @return {number} Color difference\n\t*/\n\tstatic CIEDE2000([ls1, as1, bs1]: Triplet, [ls2, as2, bs2]: Triplet): number {\n\t\tconst C1 = Math.sqrt(as1 * as1 + bs1 * bs1), C2 = Math.sqrt(as2 * as2 + bs2 * bs2);\n\t\tconst Cb = (C1 + C2) / 2;\n\t\tconst G = 0.5 * (1 - Math.sqrt(Math.pow(Cb, 7) / (Math.pow(Cb, 7) + Math.pow(25, 7))));\n\t\tconst ap1 = (1 + G) * as1, ap2 = (1 + G) * as2;\n\t\tconst Cp1 = Math.sqrt(ap1 * ap1 + bs1 * bs1), Cp2 = Math.sqrt(ap2 * ap2 + bs2 * bs2);\n\t\tconst hp1 = (bs1 == 0 && ap1 == 0) ? 0 : atan(bs1, ap1), hp2 = (bs2 == 0 && ap2 == 0) ? 0 : atan(bs2, ap2);\n\n\t\tconst DLp = ls2 - ls1;\n\t\tconst DCp = Cp2 - Cp1;\n\t\tlet Dhp = 0;\n\t\tif (Cp1 * Cp2 < 1e-10) {\n\t\t\tDhp = 0;\n\t\t} else if (Math.abs(hp2 - hp1) <= 180) {\n\t\t\tDhp = hp2 - hp1;\n\t\t} else if (hp2 - hp1 > 180) {\n\t\t\tDhp = (hp2 - hp1) - 360;\n\t\t} else if (hp2 - hp1 < -180) {\n\t\t\tDhp = (hp2 - hp1) + 360;\n\t\t}\n\t\tconst DHp = 2 * Math.sqrt(Cp1 * Cp2) * sin(Dhp / 2);\n\n\t\tconst Lbp = (ls1 + ls2) / 2;\n\t\tconst Cbp = (Cp1 + Cp2) / 2;\n\t\tlet hbp = 0;\n\t\tif (Cp1 * Cp2 < 1e-10) {\n\t\t\thbp = hp1 + hp2;\n\t\t} else if (Math.abs(hp2 - hp1) <= 180) {\n\t\t\thbp = (hp1 + hp2) / 2;\n\t\t} else if (Math.abs(hp2 - hp1) > 180 && hp1 + hp2 < 360) {\n\t\t\thbp = (hp1 + hp2 + 360) / 2;\n\t\t} else if (Math.abs(hp2 - hp1) > 180 && hp1 + hp2 >= 360) {\n\t\t\thbp = (hp1 + hp2 - 360) / 2;\n\t\t}\n\t\tconst T = 1 - 0.17 * cos(hbp - 30) + 0.24 * cos(2 * hbp) + 0.32 * cos(3 * hbp + 6) - 0.2 * cos(4 * hbp - 63);\n\t\tconst Dth = 30 * Math.exp(-sq((hbp - 275) / 25));\n\t\tconst RC = 2 * Math.sqrt(Math.pow(Cbp, 7) / (Math.pow(Cbp, 7) + Math.pow(25, 7)));\n\t\tconst SL = 1 + 0.015 * sq(Lbp - 50) / Math.sqrt(20 + sq(Lbp - 50));\n\t\tconst SC = 1 + 0.045 * Cbp;\n\t\tconst SH = 1 + 0.015 * Cbp * T;\n\t\tconst RT = -sin(2 * Dth) * RC;\n\n\t\tconst kL = 1, kC = 1, kH = 1;\n\t\tconst DE = Math.sqrt(sq(DLp / (kL * SL)) + sq(DCp / (kC * SC)) + sq(DHp / (kH * SH)) + RT * (DCp / (kC * SC)) * (DHp / (kH * SH)));\n\t\treturn DE;\n\n\t\tfunction sq(v: number) { return v * v; }\n\t\tfunction atan(y: number, x: number) { const v = Math.atan2(y, x) * 180 / Math.PI; return (v < 0) ? (v + 360) : v; }\n\t\tfunction sin(deg: number) { return Math.sin(deg * Math.PI / 180); }\n\t\tfunction cos(deg: number) { return Math.cos(deg * Math.PI / 180); }\n\t}\n\n\t/**\n\t * Calculate the color difference between the two colors.\n\t * @param {number[]} lab1 L*, a*, b* of CIELAB color 1\n\t * @param {number[]} lab2 L*, a*, b* of CIELAB color 2\n\t * @param {string} method Method of calculation\n\t * @return {number} Color difference\n\t */\n\tstatic differenceBetweenLab(lab1: Triplet, lab2: Triplet, method: string = 'cie76'): number {\n\t\tif (method === 'cie76') {\n\t\t\treturn Evaluation.CIE76(lab1, lab2);\n\t\t} else {\n\t\t\treturn Evaluation.CIEDE2000(lab1, lab2);\n\t\t}\n\t}\n\n\n\t// Determination of the basic categorical color ----------------------------\n\n\n\t/**\n\t * Find the basic categorical color of the specified color.\n\t * @param {number[]} yxy Yxy color\n\t * @return {string} Basic categorical color\n\t */\n\tstatic categoryOfYxy([y, sx, sy]: Triplet): string {\n\t\tconst lum = Math.pow(y * Evaluation._Y_TO_LUM, 0.9);  // magic number\n\n\t\tlet diff = Number.MAX_VALUE;\n\t\tlet clu = 0;\n\t\tfor (let l of Evaluation._LUM_TABLE) {\n\t\t\tconst d = Math.abs(lum - l);\n\t\t\tif (d < diff) {\n\t\t\t\tdiff = d;\n\t\t\t\tclu = l;\n\t\t\t}\n\t\t}\n\t\tconst t: string = Evaluation._CC_TABLE[clu as 2|5|10|20|30|40] as string;\n\t\tsx *= 1000;\n\t\tsy *= 1000;\n\t\tlet dis = Number.MAX_VALUE;\n\t\tlet cc: number|string = 1;\n\t\tfor (let i = 0; i < 18 * 21; i += 1) {\n\t\t\tif (t[i] === '.') continue;\n\t\t\tconst x = (i % 18) * 25 + 150;\n\t\t\tconst y = ((i / 18) | 0) * 25 + 75;\n\t\t\tconst d = Math.sqrt((sx - x) * (sx - x) + (sy - y) * (sy - y));\n\t\t\tif (d < dis) {\n\t\t\t\tdis = d;\n\t\t\t\tcc = t[i];\n\t\t\t}\n\t\t}\n\t\tconst ci = (cc === 'a') ? 10 : parseInt(cc as string);\n\t\treturn Evaluation.CATEGORICAL_COLORS[ci];\n\t}\n\n\t/**\n\t * They are sensual expressions of color difference by NBS unit.\n\t * The values represent the lower limit of each range.\n\t */\n\tstatic NBS_TRACE       = 0.0;\n\tstatic NBS_SLIGHT      = 0.5;\n\tstatic NBS_NOTICEABLE  = 1.5;\n\tstatic NBS_APPRECIABLE = 3.0;\n\tstatic NBS_MUCH        = 6.0;\n\tstatic NBS_VERY_MUCH   = 12.0;\n\n\t/**\n\t * Dental Materials J. 27(1), 139-144 (2008)\n\t */\n\tstatic DE_TO_NBS = 0.92;\n\n\t/**\n\t * Basic Categorical Colors\n\t */\n\tstatic CATEGORICAL_COLORS = [\n\t\t'white', 'black', 'red', 'green',\n\t\t'yellow', 'blue', 'brown', 'purple',\n\t\t'pink', 'orange', 'gray',\n\t];\n\tprivate static _Y_TO_LUM = 60;\n\tprivate static _LUM_TABLE = [2, 5, 10, 20, 30, 40];\n\n\tprivate static _CC_TABLE = _CC_TABLE;\n}\n", "/**\n * This class converts the CIELAB (L*a*b*) color system.\n * By default, D65 is used as tristimulus value.\n * Reference: http://en.wikipedia.org/wiki/Lab_color_space\n *\n * @author Takuto Yanagida\n * @version 2024-07-25\n */\n\nimport { Triplet } from './_triplet';\nimport { Evaluation } from './_eval';\n\nexport class Lab {\n\t// Conversion function\n\tprivate static _func(v: number): number {\n\t\treturn (v > Lab._C1) ? Math.pow(v, 1 / 3) : (v / Lab._C2 + 4 / 29);\n\t}\n\n\t// Inverse conversion function\n\tprivate static _invFunc(v: number): number {\n\t\treturn (v > Lab._C3) ? Math.pow(v, 3) : ((v - 4 / 29) * Lab._C2);\n\t}\n\n\t/**\n\t * Convert CIE 1931 XYZ to CIE 1976 (L*, a*, b*).\n\t * @param {number[]} xyz XYZ color\n\t * @return {number[]} CIELAB color\n\t */\n\tstatic fromXYZ([x, y, z]: Triplet): Triplet {\n\t\tconst fx = Lab._func(x / Lab.XYZ_TRISTIMULUS_VALUES[0]);\n\t\tconst fy = Lab._func(y / Lab.XYZ_TRISTIMULUS_VALUES[1]);\n\t\tconst fz = Lab._func(z / Lab.XYZ_TRISTIMULUS_VALUES[2]);\n\t\treturn [\n\t\t\t116 * fy - 16,\n\t\t\t500 * (fx - fy),\n\t\t\t200 * (fy - fz),\n\t\t];\n\t}\n\n\t/**\n\t * Convert CIE 1931 XYZ to L* of CIE 1976 (L*, a*, b*).\n\t * @param {number[]} xyz XYZ color\n\t * @return {number} L*\n\t */\n\tstatic lightnessFromXYZ([, y,]: Triplet): number {\n\t\tconst fy = Lab._func(y / Lab.XYZ_TRISTIMULUS_VALUES[1]);\n\t\treturn 116 * fy - 16;\n\t}\n\n\t/**\n\t * Convert CIE 1976 (L*, a*, b*) to CIE 1931 XYZ.\n\t * @param {number[]} lab L*, a*, b* of CIELAB color\n\t * @return {number[]} XYZ color\n\t */\n\tstatic toXYZ([ls, as, bs]: Triplet): Triplet {\n\t\tconst fy = (ls + 16) / 116;\n\t\tconst fx = fy + as / 500;\n\t\tconst fz = fy - bs / 200;\n\t\treturn [\n\t\t\tLab._invFunc(fx) * Lab.XYZ_TRISTIMULUS_VALUES[0],\n\t\t\tLab._invFunc(fy) * Lab.XYZ_TRISTIMULUS_VALUES[1],\n\t\t\tLab._invFunc(fz) * Lab.XYZ_TRISTIMULUS_VALUES[2],\n\t\t];\n\t}\n\n\n\t// Evaluation Functions ----------------------------------------------------\n\n\n\t/**\n\t * Calculate the conspicuity degree.\n\t * Reference: Effective use of color conspicuity for Re-Coloring system,\n\t * Correspondences on Human interface Vol. 12, No. 1, SIG-DE-01, 2010.\n\t * @param {number[]} lab L*, a*, b* of CIELAB color\n\t * @return {number} Conspicuity degree [0, 180]\n\t * TODO Consider chroma (ab radius of LAB)\n\t */\n\tstatic conspicuityOf(lab: Triplet): number {\n\t\treturn Evaluation.conspicuityOfLab(lab);\n\t}\n\n\t/**\n\t * Calculate the color difference between the two colors.\n\t * @param {number[]} lab1 L*, a*, b* of CIELAB color 1\n\t * @param {number[]} lab2 L*, a*, b* of CIELAB color 2\n\t * @return {number} Color difference\n\t */\n\tstatic differenceBetween(lab1: Triplet, lab2: Triplet): number {\n\t\treturn Evaluation.differenceBetweenLab(lab1, lab2);\n\t}\n\n\n\t// Conversion Functions ----------------------------------------------------\n\n\n\t/**\n\t * Convert CIELAB (L*a*b*) from rectangular coordinate format to polar coordinate format.\n\t * @param {number[]} lab L*, a*, b* of rectangular coordinate format (CIELAB)\n\t * @return {number[]} Color in polar format\n\t */\n\tstatic toPolarCoordinate([ls, as, bs]: Triplet): Triplet {\n\t\tconst rad = (bs > 0) ? Math.atan2(bs, as) : (Math.atan2(-bs, -as) + Math.PI);\n\t\tconst cs = Math.sqrt(as * as + bs * bs);\n\t\tconst h = rad * 360 / (Math.PI * 2);\n\t\treturn [ls, cs, h];\n\t}\n\n\t/**\n\t * Convert CIELAB (L*a*b*) from polar coordinate format to rectangular coordinate format.\n\t * @param {number[]} lab L*, C*, h of polar format (CIELAB)\n\t * @return {number[]} Color in rectangular coordinate format\n\t */\n\tstatic toOrthogonalCoordinate([ls, cs, h]: Triplet): Triplet {\n\t\tconst rad = h * (Math.PI * 2) / 360;\n\t\tconst as = Math.cos(rad) * cs;\n\t\tconst bs = Math.sin(rad) * cs;\n\t\treturn [ls, as, bs];\n\t}\n\n\t// Constants for simplification of calculation\n\tprivate static _C1 = Math.pow(6, 3) / Math.pow(29, 3);      // (6/29)^3 = 0.0088564516790356308171716757554635\n\tprivate static _C2 = 3 * Math.pow(6, 2) / Math.pow(29, 2);  // 3*(6/29)^2 = 0.12841854934601664684898929845422\n\tprivate static _C3 = 6 / 29;                                // 6/29 = 0.20689655172413793103448275862069\n\n\t/**\n\t * D50 tristimulus value\n\t * Reference: http://www.babelcolor.com/download/A%20review%20of%20RGB%20color%20spaces.pdf\n\t */\n\tstatic D50_xyz = [0.34567, 0.35850, 0.29583];\n\tstatic D50_XYZ = [Lab.D50_xyz[0] / Lab.D50_xyz[1], 1, Lab.D50_xyz[2] / Lab.D50_xyz[1]];\n\n\t/**\n\t * D65 tristimulus value\n\t * Reference: http://www.babelcolor.com/download/A%20review%20of%20RGB%20color%20spaces.pdf\n\t */\n\tstatic D65_xyz = [0.31273, 0.32902, 0.35825];\n\tstatic D65_XYZ = [Lab.D65_xyz[0] / Lab.D65_xyz[1], 1, Lab.D65_xyz[2] / Lab.D65_xyz[1]];\n\n\t/**\n\t * XYZ tristimulus value\n\t */\n\tstatic XYZ_TRISTIMULUS_VALUES = Lab.D65_XYZ;\n}\n", "/**\n * This class converts the YIQ color system.\n * Reference: http://en.wikipedia.org/wiki/YIQ\n *\n * @author Takuto Yanagida\n * @version 2024-07-25\n */\n\nimport { Triplet } from './_triplet';\n\nexport class YIQ {\n\t/**\n\t * Convert Linear RGB to YIQ.\n\t * @param {number[]} lrgb Linear RGB color\n\t * @return {number[]} YIQ color\n\t */\n\tstatic fromLRGB([lr, lg, lb]: Triplet): Triplet {\n\t\treturn [\n\t\t\t0.2990   * lr +  0.5870   * lg +  0.1140   * lb,  // Y[0, 1]\n\t\t\t0.595716 * lr + -0.274453 * lg + -0.321263 * lb,  // I[-0.5957, 0.5957]\n\t\t\t0.211456 * lr + -0.522591 * lg +  0.311135 * lb,  // Q[-0.5226, 0.5226]\n\t\t];\n\t}\n\n\t/**\n\t * Convert YIQ to Linear RGB.\n\t * @param {number[]} yiq YIQ color\n\t * @return {number[]} Linear RGB color\n\t */\n\tstatic toLRGB([y, i, q]: Triplet): Triplet {\n\t\treturn [\n\t\t\ty +  0.9563 * i +  0.6210 * q,  // R[0, 1]\n\t\t\ty + -0.2721 * i + -0.6474 * q,  // G[0, 1]\n\t\t\ty + -1.1070 * i +  1.7046 * q,  // B[0, 1]\n\t\t];\n\t}\n}\n", "/**\n * This class converts the Linear RGB color system.\n * It is targeted for Linear RGB which converted sRGB (D65).\n * Reference: http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n *\n * @author Takuto Yanagida\n * @version 2024-07-25\n */\n\nimport { Triplet } from './_triplet';\nimport { RGB } from './_cs-rgb';\nimport { YIQ } from './_cs-yiq';\n\nexport class LRGB {\n\t/**\n\t * Convert Linear RGB to CIE 1931 XYZ.\n\t * @param {number[]} lrgb Linear RGB color\n\t * @return {number[]} XYZ color\n\t */\n\tstatic toXYZ([lr, lg, lb]: Triplet): Triplet {\n\t\treturn [\n\t\t\t0.4124564 * lr + 0.3575761 * lg + 0.1804375 * lb,\n\t\t\t0.2126729 * lr + 0.7151522 * lg + 0.0721750 * lb,\n\t\t\t0.0193339 * lr + 0.1191920 * lg + 0.9503041 * lb,\n\t\t];\n\t}\n\n\t/**\n\t * Convert CIE 1931 XYZ to Linear RGB.\n\t * @param {number[]} xyz XYZ color\n\t * @return {number[]} Linear RGB color\n\t */\n\tstatic fromXYZ([x, y, z]: Triplet): Triplet {\n\t\treturn [\n\t\t\t 3.2404542 * x + -1.5371385 * y + -0.4985314 * z,\n\t\t\t-0.9692660 * x +  1.8760108 * y +  0.0415560 * z,\n\t\t\t 0.0556434 * x + -0.2040259 * y +  1.0572252 * z,\n\t\t];\n\t}\n\n\n\t// Inverse Conversion Functions --------------------------------------------\n\n\n\t/**\n\t * Convert Linear RGB to sRGB (Gamma 2.2).\n\t * @param {number[]} lrgb Linear RGB color\n\t * @return {number[]} sRGB color\n\t */\n\tstatic toRGB(lrgb: Triplet): Triplet {\n\t\treturn RGB.fromLRGB(lrgb);\n\t}\n\n\t/**\n\t * Convert sRGB to Linear RGB (Gamma 2.2).\n\t * @param {number[]} rgb sRGB color\n\t * @return {number[]} sRGB color\n\t */\n\tstatic fromRGB(rgb: Triplet): Triplet {\n\t\treturn RGB.toLRGB(rgb);\n\t}\n\n\t/**\n\t * Convert Linear RGB to YIQ.\n\t * @param {number[]} lrgb Linear RGB color\n\t * @return {number[]} YIQ color\n\t */\n\tstatic toYIQ(lrgb: Triplet): Triplet {\n\t\treturn YIQ.fromLRGB(lrgb);\n\t}\n\n\t/**\n\t * Convert YIQ to Linear RGB.\n\t * @param {number[]} yiq YIQ color\n\t * @return {number[]} Linear RGB color\n\t */\n\tstatic fromYIQ(yiq: Triplet): Triplet {\n\t\treturn YIQ.toLRGB(yiq);\n\t}\n}\n", "/**\n * This class converts the Yxy color system.\n *\n * @author Takuto Yanagida\n * @version 2024-07-25\n */\n\nimport { Triplet } from './_triplet';\nimport { Lab } from './_cs-lab';\nimport { Evaluation } from './_eval';\n\nexport class Yxy {\n\tstatic isSaturated = false;\n\n\t/**\n\t * Convert CIE 1931 XYZ to Yxy.\n\t * @param {number[]} xyz XYZ color\n\t * @return {number[]} Yxy color\n\t */\n\tstatic fromXYZ([x, y, z]: Triplet): Triplet {\n\t\tconst sum = x + y + z;\n\t\tif (sum === 0) return [y, 0.31273, 0.32902];  // White point D65\n\t\treturn [y, x / sum, y / sum];\n\t}\n\n\t/**\n\t * Convert Yxy to CIE 1931 XYZ.\n\t * @param {number[]} yxy Yxy color\n\t * @return {number[]} XYZ color\n\t */\n\tstatic toXYZ([y, sx, sy]: Triplet): Triplet {\n\t\tconst d0 = sx * y / sy;\n\t\tif (Number.isNaN(d0)) {\n\t\t\tYxy.isSaturated = false;\n\t\t\treturn [0, 0, 0];\n\t\t}\n\t\tconst d1 = y;\n\t\tconst d2 = (1 - sx - sy) * y / sy;\n\t\tYxy.isSaturated = (Lab.D65_XYZ[0] < d0 || Lab.D65_XYZ[1] < d1 || Lab.D65_XYZ[2] < d2);\n\t\treturn [d0, d1, d2];\n\t}\n\n\n\t// Evaluation Function -----------------------------------------------------\n\n\n\t/**\n\t * Calculate the basic categorical color of the specified color.\n\t * @param {number[]} yxy Yxy color\n\t * @return {string} Basic categorical color\n\t */\n\tstatic categoryOf(yxy: Triplet): string {\n\t\treturn Evaluation.categoryOfYxy(yxy);\n\t}\n}\n", "/**\n * This class converts the LMS color system.\n *\n * @author Takuto Yanagida\n * @version 2024-07-25\n */\n\nimport { Triplet } from './_triplet';\n\nexport class LMS {\n\t/**\n\t * Convert CIE 1931 XYZ to LMS.\n\t * @param {number[]} xyz XYZ color\n\t * @return {number[]} LMS color\n\t */\n\tstatic fromXYZ([x, y, z]: Triplet): Triplet {\n\t\treturn [\n\t\t\tLMS.matrix[0][0] * x + LMS.matrix[0][1] * y + LMS.matrix[0][2] * z,\n\t\t\tLMS.matrix[1][0] * x + LMS.matrix[1][1] * y + LMS.matrix[1][2] * z,\n\t\t\tLMS.matrix[2][0] * x + LMS.matrix[2][1] * y + LMS.matrix[2][2] * z,\n\t\t];\n\t}\n\n\t/**\n\t * Convert LMS to CIE 1931 XYZ.\n\t * @param {number[]} lms LMS color\n\t * @return {number[]} XYZ color\n\t */\n\tstatic toXYZ([l, m, s]: Triplet): Triplet {\n\t\treturn [\n\t\t\tLMS.matrixInverse[0][0] * l + LMS.matrixInverse[0][1] * m + LMS.matrixInverse[0][2] * s,\n\t\t\tLMS.matrixInverse[1][0] * l + LMS.matrixInverse[1][1] * m + LMS.matrixInverse[1][2] * s,\n\t\t\tLMS.matrixInverse[2][0] * l + LMS.matrixInverse[2][1] * m + LMS.matrixInverse[2][2] * s,\n\t\t];\n\t}\n\n\t/*\n\t* Reference: F. Vienot, H. Brettel, and J.D. Mollon,\n\t* Digital video colourmaps for checking the legibility of displays by dichromats,\n\t* COLOR research and application, vol.24, no.4, pp.243-252, Aug. 1999.\n\t*/\n\tstatic SMITH_POKORNY = [\n\t\t[ 0.15514, 0.54312, -0.03286],\n\t\t[-0.15514, 0.45684,  0.03286],\n\t\t[ 0.0,     0.0,      0.01608]\n\t];\n\n\tstatic SMITH_POKORNY_INV = [\n\t\t[2.944812906606763, -3.500977991936487, 13.17218214714747],\n\t\t[1.000040001600064,  1.000040001600064,  0.0             ],\n\t\t[0.0,                0.0,               62.18905472636816]\n\t];\n\n\tstatic BRADFORD = [\n\t\t[ 0.8951000,  0.2664000, -0.1614000],\n\t\t[-0.7502000,  1.7135000,  0.0367000],\n\t\t[ 0.0389000, -0.0685000,  1.0296000]\n\t];\n\n\tstatic BRADFORD_INV = [\n\t\t[ 0.9869929, -0.1470543,  0.1599627],\n\t\t[ 0.4323053,  0.5183603,  0.0492912],\n\t\t[-0.0085287,  0.0400428,  0.9684867]\n\t];\n\n\tstatic VON_KRIES = [\n\t\t[ 0.4002400, 0.7076000, -0.0808100],\n\t\t[-0.2263000, 1.1653200,  0.0457000],\n\t\t[ 0.0000000, 0.0000000,  0.9182200]\n\t];\n\n\tstatic VON_KRIES_INV = [\n\t\t[1.8599364, -1.1293816,  0.2198974],\n\t\t[0.3611914,  0.6388125, -0.0000064],\n\t\t[0.0000000,  0.0000000,  1.0890636]\n\t];\n\n\tstatic matrix        = LMS.SMITH_POKORNY;\n\tstatic matrixInverse = LMS.SMITH_POKORNY_INV;\n}\n", "export const _TBL_SRC_MIN = [\n\t[\n\t\t[0,363,271,-334,-300,-6,4,-2,0,-5,4,-1,1],\n\t\t[1,377,282,-337,-307,-5,1,-6,1,-4,3],\n\t\t[2,391,293,-340,-313,-4,-1,-8,-1,-7,2],\n\t\t[3,402,303,-338,-317,-6,-5,-10,-2,-9,1],\n\t\t[4,413,315,-333,-323,-15,-7,-5,-6,-12,0],\n\t\t[5,426,334,-321,-331,-31,-13,-7,-11],\n\t\t[6,438,358,-310,-336],\n\t\t[7,443,378],\n\t\t[8,445,398],\n\t\t[9,436,418],\n\t\t[10,423,427],\n\t\t[11,404,429],\n\t\t[12,380,421],\n\t\t[13,354,409],\n\t\t[14,336,398,-295,-202],\n\t\t[15,315,384,-317,-230],\n\t\t[16,301,372,-330,-254,-20,31],\n\t\t[17,291,363,-337,-277,-28,27,-35,15],\n\t\t[18,283,356,-337,-290,-28,12,-9,-7],\n\t\t[19,276,348,-336,-299,-22,5,1,-11],\n\t\t[20,269,341,-334,-310,-14,-1,5,-16],\n\t\t[21,260,329,-332,-317,1,-8,2,-3],\n\t\t[22,250,314,-325,-326,9,-4],\n\t\t[23,243,302,-316,-327,9,-3],\n\t\t[24,236,288,-306,-326,11,1],\n\t\t[25,232,278,-299,-324,14,5],\n\t\t[26,229,268,-291,-319,16,9],\n\t\t[27,229,258,-286,-311,15,12,9,5],\n\t\t[28,231,249,-284,-301,14,11,8,7],\n\t\t[29,236,242,-282,-293,10,9,9,9],\n\t\t[30,243,237,-285,-287,9,8,10,9,7,8],\n\t\t[31,255,231,-287,-280,9,9,10,12,6,9,3,4,2,4,0,0,1,5,0,-1,1,2,-1,0,1,1,0,0,-1,0,1,1,0,1,0,0,0,0],\n\t\t[32,268,228,-290,-273,5,9,7,12,3,4,2,4,2,4,0,1,1,3,1,1,0,2,-1,-1,1,1,1,0,-1,1],\n\t\t[33,281,230,-295,-273,4,12,3,5,1,7,1,2,2,4,0,2,1,3,1,0,-1,1,1,2,-1,-1],\n\t\t[34,294,233,-303,-273,3,10,1,5,1,5,1,3,1,2,0,4,0,3,1,0,0,0],\n\t\t[35,303,236,-307,-275,1,10,0,4,1,5,-1,3,2,1,-1,5,1,3,0,0],\n\t\t[36,313,240,-313,-277,0,8,-2,3,1,6,0,3,0,1,1,5,-1,2],\n\t\t[37,324,246,-319,-282,-2,7,-1,3,-1,6,0,3,0,1,-1,4],\n\t\t[38,338,254,-326,-288,-3,6,-2,2,0,6,-3,2,0,4],\n\t\t[39,350,262,-329,-294,-5,6,-2,1,-2,4,-1,3]\n\t],\n\t[\n\t\t[0,353,296,-321,-314,-3,1,0,-2,-4,1,-2,0,-1,1],\n\t\t[1,361,303,-320,-316,-4,-1,2,-3,-5,1,-2,-2,-3,1],\n\t\t[2,369,311,-320,-319,-3,-2,4,-3,-8,-4,-5,1,0,-2],\n\t\t[3,375,318,-316,-319,-5,-4,1,-4,-3,-7,-8,-1,-4,-1],\n\t\t[4,381,327,-314,-321,-6,-6,1,-7,-8,-7,-6,-4,-4,-3],\n\t\t[5,385,337,-310,-323,-7,-7,4,-6],\n\t\t[6,388,348,-309,-322,-3,-7],\n\t\t[7,389,359,-309,-322,-1,-6],\n\t\t[8,387,369,-306,-321],\n\t\t[9,383,379,-303,-319],\n\t\t[10,376,384,-298,-311],\n\t\t[11,366,386,-292,-300],\n\t\t[12,356,385,-293,-291],\n\t\t[13,342,380,-296,-285],\n\t\t[14,331,374,-304,-283,-1,19],\n\t\t[15,317,365,-309,-284,-7,11,-11,21],\n\t\t[16,307,358,-315,-292,-6,7,-8,14,-10,10,-8,2],\n\t\t[17,298,351,-320,-302,-5,3,-3,0,-12,14,-4,-5,-3,-6,0,-5],\n\t\t[18,292,345,-320,-305,-4,-2,-2,-3,-8,5,-2,-2,1,-5,2,-3],\n\t\t[19,287,340,-320,-309,-1,-4,-2,-1,-4,1,-2,-2,3,-4,4,-3],\n\t\t[20,282,334,-320,-312,3,-4,-3,-1,-1,-2,0,-3,6,-3,2,-3],\n\t\t[21,277,327,-320,-316,6,-4,-4,0,4,-4,3,0,5,-2],\n\t\t[22,270,318,-317,-321,8,-1,-4,-3,7,-1,8,0],\n\t\t[23,265,310,-314,-322,8,-1,-1,-1,8,1,7,3],\n\t\t[24,261,301,-312,-323,8,0,2,-2,8,4],\n\t\t[25,258,294,-310,-323,8,0,5,1,7,3],\n\t\t[26,256,287,-307,-322,8,-1,6,3,9,6],\n\t\t[27,255,280,-304,-320,9,3,5,3,9,7],\n\t\t[28,256,273,-302,-315,8,5,6,3,8,9],\n\t\t[29,259,268,-300,-311,6,4,6,6,8,8,5,5],\n\t\t[30,264,262,-302,-305,6,5,7,6,6,7,5,6,3,1],\n\t\t[31,271,258,-300,-301,6,7,5,7,5,5,6,7,2,4,2,1,0,2,2,3,-1,-1,1,3,0,0,1,1,-1,0,1,0,-1,1,1,0,-1,0],\n\t\t[32,280,257,-300,-298,4,9,1,3,6,7,3,6,1,2,1,2,1,2,1,1,0,1,0,2,1,0,0,1,0,0,0,1,0,0],\n\t\t[33,289,258,-302,-295,3,8,1,1,2,6,2,5,1,2,0,3,2,1,-1,2,1,1,0,0,0,2,1,-1,-1,1],\n\t\t[34,298,261,-305,-296,1,8,0,-1,2,7,0,3,1,2,0,5,1,0,0,1,1,1,-1,1,1,0,0,2],\n\t\t[35,307,265,-309,-298,0,7,-1,-2,1,7,0,3,0,3,0,2,1,2,0,1,0,0,0,2],\n\t\t[36,316,269,-313,-299,-1,4,-1,-1,0,7,-1,2,1,2,-1,2,-1,2,1,2,0,0],\n\t\t[37,328,275,-318,-300,-1,1,0,-2,-3,6,-1,2,-1,1,0,3,-1,2,-1,1],\n\t\t[38,338,283,-320,-306,-3,1,0,-2,-4,4,0,2,-1,2,-1,1,-2,4],\n\t\t[39,346,289,-322,-310,-2,2,0,-2,-4,1,-2,2,-2,2,-2,2]\n\t],\n\t[\n\t\t[0,353,307,-317,-317,-3,-1,0,-1,-3,0,-1,-1,-5,1,1,-1],\n\t\t[1,359,313,-316,-318,-4,-2,2,-2,-4,-2,-2,-1,-6,1,0,-1],\n\t\t[2,365,319,-315,-319,-6,-2,3,-4,-3,-3,-6,-3,-6,1,0,-2],\n\t\t[3,369,325,-314,-320,-5,-3,1,-4,-3,-4,-5,-5,-10,-1,0,-2],\n\t\t[4,373,331,-315,-321,-4,-4,0,-5,-6,-5,-3,-4,-7,-3],\n\t\t[5,376,339,-316,-322,-1,-4,-6,-5,-7,-3],\n\t\t[6,377,348,-316,-324,-2,-5,-10,-6],\n\t\t[7,377,355,-316,-323,-6,-7,-9,-6],\n\t\t[8,375,363,-316,-324,-6,-8,-9,-8],\n\t\t[9,370,370,-312,-323,-8,-11],\n\t\t[10,365,375,-311,-322,-6,-10],\n\t\t[11,359,378,-309,-318,-6,-9],\n\t\t[12,351,379,-306,-313,-6,-8],\n\t\t[13,341,377,-305,-306,-6,-8],\n\t\t[14,332,373,-309,-303,-3,-2,-3,4],\n\t\t[15,318,364,-309,-299,-3,3,-5,5,-8,2],\n\t\t[16,309,358,-313,-304,-2,6,-4,4,-7,3,-2,0,-6,5],\n\t\t[17,300,350,-316,-308,-4,0,0,-1,-7,5,0,-3,0,-2,-2,-4,0,-2,-4,1,0,-2],\n\t\t[18,294,344,-317,-310,-1,-2,0,-4,-5,2,1,-3,0,-2,2,-4,2,-1,-2,-1,-2,2],\n\t\t[19,289,339,-316,-311,0,-5,1,-3,-3,1,1,-1,2,-4,2,-1,2,-2,-1,0,-1,0],\n\t\t[20,284,334,-315,-314,2,-4,2,-2,-1,-1,0,0,3,-4,2,0,2,-3,2,-1,-1,0],\n\t\t[21,280,327,-316,-315,5,-4,3,-2,-2,-1,4,-1,2,-1,3,-1,2,-1,2,1],\n\t\t[22,274,319,-314,-318,8,-2,0,-2,3,-1,4,-1,3,1,2,-1,4,1],\n\t\t[23,270,312,-313,-320,9,0,3,-1,2,0,5,2,2,-1,4,1],\n\t\t[24,266,305,-310,-321,8,-1,5,2,1,-1,7,3,1,0],\n\t\t[25,264,298,-310,-321,11,2,3,0,3,1,6,3],\n\t\t[26,262,292,-306,-321,10,4,3,-1,4,2,5,4],\n\t\t[27,262,286,-304,-318,10,4,2,1,6,4,3,1],\n\t\t[28,263,280,-301,-313,6,3,5,4,4,3,3,1,4,5],\n\t\t[29,266,276,-301,-311,6,4,5,4,4,4,2,3,3,2],\n\t\t[30,271,272,-303,-308,5,5,6,6,2,1,3,4,3,2,2,2,2,4],\n\t\t[31,278,269,-304,-306,5,6,5,6,2,3,3,3,3,3,3,2,1,4,1,2,1,-1,0,2,0,2,1,0,0,0,0,0,1,2],\n\t\t[32,285,267,-304,-302,4,6,3,5,1,2,4,6,0,0,2,3,2,3,0,1,0,1,1,0,0,2,1,0,0,1,0,-1,0,2],\n\t\t[33,292,268,-305,-302,3,7,3,5,0,1,2,5,0,1,1,2,1,2,0,2,1,0,0,1,0,2,0,-1,0,1,1,1,0,0],\n\t\t[34,300,270,-307,-301,1,6,1,2,0,3,2,3,0,3,0,1,1,2,0,2,0,0,0,0,1,2,0,0,0,1,0,0],\n\t\t[35,309,274,-311,-303,1,5,-1,1,0,4,0,2,1,3,0,2,0,0,0,3,0,0,0,0,1,1,-1,0,0,2],\n\t\t[36,317,279,-313,-306,-1,4,0,2,-1,2,-1,2,0,2,0,4,0,-2,-1,4,1,0,-1,0,0,1],\n\t\t[37,327,286,-314,-310,-3,5,0,-1,-2,2,-1,3,0,1,-1,1,-1,1,-1,2,1,-1],\n\t\t[38,337,294,-315,-314,-4,3,-2,0,-2,1,-1,1,-2,0,0,2,-3,2,0,0],\n\t\t[39,345,300,-316,-315,-4,1,-1,-1,-2,1,-2,-1,-2,2,-2,0,-2,1]\n\t],\n\t[\n\t\t[0,342,311,-312,-318,-2,0,0,-1,-3,0,1,-1,-3,-1,-2,1,3,-2,-4,1],\n\t\t[1,346,315,-311,-317,-2,-2,0,-2,-3,0,0,-1,0,-2,-5,0,3,-1],\n\t\t[2,351,320,-310,-318,-3,-1,1,-3,-4,-1,0,-2,-1,-2,-3,-1,-2,-2],\n\t\t[3,354,324,-309,-318,-2,-2,0,-2,-4,-3,-3,-2,0,-2,-6,-3,-2,-1,-1,-2],\n\t\t[4,358,329,-308,-317,-4,-3,0,-3,-4,-4,-4,-1,-3,-3,-9,-2],\n\t\t[5,362,337,-310,-320,-5,-4,-1,-2,-5,-3,-8,-3],\n\t\t[6,365,344,-311,-320,-8,-6,-4,-5,-6,-2,-6,-4],\n\t\t[7,366,350,-311,-319,-10,-9,-7,-5,-6,-3],\n\t\t[8,366,359,-313,-323,-10,-10,-8,-6,-7,-4],\n\t\t[9,363,365,-312,-322,-11,-12,-7,-7,-8,-7],\n\t\t[10,359,370,-311,-321,-10,-13,-8,-10],\n\t\t[11,354,373,-310,-319,-9,-12,-8,-12],\n\t\t[12,348,373,-309,-314,-7,-11,-8,-13],\n\t\t[13,338,371,-305,-309,-7,-9,-6,-9],\n\t\t[14,331,368,-308,-308,-5,-3,-3,-4,-4,-6],\n\t\t[15,319,360,-310,-304,-1,2,-4,3,-4,-5,-5,0],\n\t\t[16,311,355,-312,-308,-2,6,-3,1,-4,4,-5,3,-2,-3,0,-8],\n\t\t[17,301,347,-313,-312,-3,5,-3,-2,-2,3,-3,1,1,-7,-1,-2,0,-1,1,-4,0,-1,-3,0,2,-2],\n\t\t[18,296,342,-314,-314,-2,1,-2,-1,-2,-2,-4,2,7,-8,-2,0,2,-1,4,-5,-1,0,-5,4,3,-3],\n\t\t[19,292,337,-314,-314,-1,-1,-1,-2,0,0,-4,0,7,-6,0,0,1,0,4,-4,0,0,-3,1,0,0],\n\t\t[20,288,333,-313,-316,-1,-1,1,-2,1,-1,-4,1,8,-4,1,-2,-1,0,4,-2,1,-1,0,0,0,1],\n\t\t[21,284,327,-313,-316,2,-3,0,0,0,-2,2,-1,4,-1,3,-1,0,0,3,-1,2,0,0,-1],\n\t\t[22,280,321,-312,-319,2,-1,1,-2,2,0,3,-1,3,-1,3,0,2,0,1,0],\n\t\t[23,276,315,-309,-319,1,-2,3,0,1,-2,4,1,3,0,4,2,2,0],\n\t\t[24,274,309,-310,-320,5,-1,0,-1,3,0,5,1,1,2,8,2],\n\t\t[25,273,304,-310,-321,6,1,0,-3,3,2,7,3,-1,-1,9,6],\n\t\t[26,272,299,-308,-320,6,0,0,-1,5,2,4,1,1,2],\n\t\t[27,273,295,-307,-320,5,2,1,-1,6,4,1,1,2,1],\n\t\t[28,275,291,-307,-317,5,2,0,-1,6,4,2,2,1,1,3,2],\n\t\t[29,278,288,-307,-316,4,2,1,1,5,5,1,1,2,0,3,3,1,2],\n\t\t[30,282,284,-308,-312,3,2,0,1,6,4,1,3,2,0,1,2,2,1,1,1],\n\t\t[31,286,282,-306,-311,1,3,2,1,3,4,2,3,2,2,2,1,2,2,0,0,3,5,0,0,1,1],\n\t\t[32,291,280,-306,-308,1,2,2,4,1,2,2,2,1,2,3,3,0,2,1,-1,1,4,0,1,0,-2,1,3,0,0],\n\t\t[33,296,281,-306,-309,0,5,3,2,0,2,1,2,1,3,1,0,0,2,0,1,2,3,0,0,-1,0,1,1,1,1,-1,-2],\n\t\t[34,302,283,-308,-309,0,4,2,2,-1,2,2,2,0,1,0,1,0,3,1,0,0,3,1,-1,-1,1,0,0,1,2,-1,-2],\n\t\t[35,309,286,-310,-310,1,4,-1,1,0,2,0,2,0,0,0,1,0,2,0,2,0,1,0,1,1,-1,-1,1,0,0,0,1],\n\t\t[36,316,290,-311,-311,-1,1,-1,3,0,1,-1,1,0,2,0,1,0,-1,-1,0,0,5,0,0,0,-1,-1,1,1,-1],\n\t\t[37,323,295,-312,-313,-1,1,-1,1,-1,2,-1,0,0,2,-1,0,0,0,0,0,-2,3,0,0,0,2],\n\t\t[38,331,301,-313,-315,0,0,-2,1,-3,2,1,-2,-1,2,-2,0,1,-1,-1,1,-2,2],\n\t\t[39,337,306,-313,-316,0,0,-2,-1,-3,1,0,-1,-1,1,-1,-1,0,0,-1,-1]\n\t],\n\t[\n\t\t[0,333,313,-307,-317,0,-1,0,-1,-4,0,3,-2,-6,2,3,-2,-2,0,1,0],\n\t\t[1,336,316,-306,-317,0,-1,-1,-1,-1,-1,1,-2,-6,1,2,-2,-1,-1,0,0],\n\t\t[2,339,319,-304,-316,-1,-1,-1,-2,1,-1,-2,-3,-5,1,3,-3,-2,0,-6,-1],\n\t\t[3,343,323,-305,-317,-1,0,1,-2,-1,-3,-2,-2,-4,-1,0,-2,-5,-1,-3,-1],\n\t\t[4,347,328,-306,-316,1,-2,-1,-2,-1,-3,-3,-2,-8,-3,-2,0,-1,-2],\n\t\t[5,351,334,-309,-319,2,0,-1,-3,-5,-4,-8,-1,-5,-3,-5,0],\n\t\t[6,353,340,-309,-319,1,-1,-4,-5,-8,-5,-7,-2,-4,-2],\n\t\t[7,354,345,-309,-319,0,-2,-7,-5,-9,-5,-6,-4,-6,-3],\n\t\t[8,355,351,-310,-318,-2,-4,-9,-8,-9,-6,-6,-4],\n\t\t[9,353,357,-309,-319,-3,-4,-10,-11,-9,-7,-5,-3],\n\t\t[10,350,362,-308,-318,-4,-6,-10,-13,-8,-6,-5,-5],\n\t\t[11,347,364,-309,-316,-3,-5,-10,-13,-7,-9,-4,-6],\n\t\t[12,342,365,-308,-314,-3,-5,-7,-11,-8,-11,-4,-6],\n\t\t[13,335,364,-308,-314,-1,1,-5,-9,-8,-12,-2,-7],\n\t\t[14,329,361,-310,-312,-1,2,-2,-3,-5,-8,-3,-9],\n\t\t[15,319,356,-311,-313,0,6,-2,1,-2,1,-4,-5,-2,-7],\n\t\t[16,311,351,-311,-314,0,5,-3,4,-2,2,-4,3,-1,-5,-4,3,-1,-1],\n\t\t[17,303,345,-312,-316,-1,2,-3,2,-1,0,-4,3,0,-2,-2,1,-3,-1,3,-5,0,-1,1,-3,-1,-1,0,-1],\n\t\t[18,298,339,-312,-315,-1,-1,-3,2,0,-3,-5,3,4,-6,-2,2,0,-2,4,-4,-1,-1,-1,3,2,-4,0,1],\n\t\t[19,295,336,-312,-317,-1,-2,-2,3,0,-4,-4,3,6,-4,-3,-1,1,1,4,-4,0,0,-1,0,2,-2,1,0],\n\t\t[20,291,331,-311,-316,1,-2,-3,1,2,-2,-5,2,7,-4,-2,0,1,0,3,-3,0,0,1,-1,3,-1,0,0],\n\t\t[21,288,327,-310,-317,1,-2,-3,1,1,-2,-1,-1,6,-2,-3,0,3,0,2,-2,1,0,3,0],\n\t\t[22,284,321,-309,-317,2,-2,-3,-1,1,-1,1,0,8,0,-5,-2,2,0,4,1,3,-1],\n\t\t[23,281,316,-307,-317,0,-1,0,-3,1,0,1,0,6,0,-1,0,0,0],\n\t\t[24,280,311,-309,-318,1,-2,2,0,1,-1,2,0,5,2,-2,-1],\n\t\t[25,279,307,-309,-319,2,-1,2,0,1,-1,1,0,6,2,-1,0],\n\t\t[26,279,303,-309,-318,3,-3,1,0,3,1,1,-1,3,3,0,-1],\n\t\t[27,280,300,-309,-319,3,-1,2,1,2,0,1,0,3,3,1,-1],\n\t\t[28,282,297,-309,-318,2,0,2,0,2,2,2,0,1,3,2,-1,3,5],\n\t\t[29,285,294,-310,-316,2,-1,2,2,2,1,1,1,3,3,1,-1,0,2],\n\t\t[30,288,292,-310,-315,1,-1,2,3,1,1,2,2,1,1,2,0,1,2],\n\t\t[31,292,291,-310,-315,0,-1,4,3,1,4,0,-1,1,2,3,2,0,1,2,1],\n\t\t[32,296,291,-310,-316,1,0,1,5,3,2,-1,1,2,1,0,2,3,2,0,1,1,1],\n\t\t[33,300,291,-310,-315,1,1,1,3,2,4,0,-1,1,3,1,1,0,2,0,0,0,1,1,0,1,2],\n\t\t[34,305,293,-311,-316,0,2,2,2,0,3,0,0,1,3,-1,0,2,1,-1,2,1,0,0,0,1,2,-1,0],\n\t\t[35,310,296,-310,-317,-1,2,1,1,-1,3,0,0,1,2,-1,1,0,0,0,2,1,-1,-1,3,0,-1,1,1,-1,0],\n\t\t[36,315,299,-310,-317,-1,0,0,1,-1,4,0,-1,-1,2,0,0,0,1,0,1,0,0,-1,2,1,-2,-1,3,0,-1],\n\t\t[37,320,302,-310,-317,0,0,-1,0,-2,3,1,0,-2,0,0,2,0,0,-1,0,0,0,0,3,-1,-2],\n\t\t[38,326,307,-310,-319,1,1,-1,0,-3,1,1,-1,-2,2,0,-1,-1,1,0,0,-1,1,0,-1],\n\t\t[39,330,310,-308,-318,-1,0,-1,-1,-2,1,1,-1,-4,1,2,-1,-3,0,2,0,-4,1]\n\t],\n\t[\n\t\t[0,329,314,-307,-317,1,-1,-4,1,3,-2,-1,0,-2,-1,4,-1,-5,1],\n\t\t[1,332,317,-307,-318,1,1,-2,-2,1,0,0,-2,-3,0,3,-2,-3,1],\n\t\t[2,334,319,-305,-316,0,-1,-2,-1,2,-1,-1,-2,-2,0,2,-1,-3,-1],\n\t\t[3,338,323,-307,-317,0,-1,1,-1,2,-1,-4,-1,1,-2,-2,-1,-2,-1],\n\t\t[4,342,327,-307,-316,-2,-2,2,-1,1,-1,-2,-2,-2,-2,-5,-2,0,0],\n\t\t[5,345,332,-309,-317,1,-2,-2,-2,1,-1,-3,-2,-6,-2,-6,-2,-3,-1],\n\t\t[6,347,337,-310,-318,2,0,-3,-4,-3,-3,-5,-2,-6,-3,-4,-2,-6,-2],\n\t\t[7,349,342,-312,-319,1,0,-2,-5,-6,-2,-5,-5,-8,-3,-2,-1],\n\t\t[8,349,348,-312,-319,1,-3,-5,-4,-6,-5,-6,-5,-6,-4],\n\t\t[9,348,354,-312,-321,0,-2,-4,-7,-8,-5,-7,-7,-4,-2],\n\t\t[10,346,358,-313,-320,2,-3,-6,-7,-8,-8,-7,-7,-1,-1],\n\t\t[11,343,360,-311,-320,-1,0,-5,-8,-7,-10,-6,-7,-2,-2],\n\t\t[12,340,361,-312,-319,0,0,-4,-6,-7,-10,-5,-9,-2,-2],\n\t\t[13,334,361,-311,-318,0,0,-2,-1,-6,-12,-4,-8,-3,-4],\n\t\t[14,329,359,-312,-317,-1,1,-1,1,-3,-6,-3,-8,-3,-7],\n\t\t[15,319,355,-310,-318,-2,3,0,5,-3,-2,-1,-3,-2,-1,-1,-10],\n\t\t[16,311,350,-310,-318,0,4,-2,2,-2,1,-2,2,-3,3,-1,-4,-2,2,0,-4],\n\t\t[17,304,344,-311,-318,-1,0,-1,2,-2,1,-1,-1,-2,4,-1,-2,-3,1,0,-1,0,-2,-2,1,0,-3,1,-1],\n\t\t[18,299,338,-311,-316,0,-2,-2,-1,0,0,-4,2,2,-3,-1,0,0,-1,-1,0,0,-1,0,0,1,-1,0,-1],\n\t\t[19,296,334,-311,-316,0,-3,0,1,-1,-1,-2,1,1,-2,0,-1,-1,1,2,-1,0,-1,-1,-1,2,0,0,0],\n\t\t[20,293,330,-311,-316,2,-2,-1,0,0,0,-2,-1,3,0,-2,-2,1,1,0,-1,2,-1,-1,0,3,-2],\n\t\t[21,290,327,-310,-317,3,-2,-3,-1,2,-1,-2,1,3,-2,-1,0,1,-1,1,0,1,-1],\n\t\t[22,287,322,-309,-318,1,-1,1,-1,0,0,0,-1,2,-1,1,1,1,-1,0,-1],\n\t\t[23,285,317,-310,-317,3,-1,1,-1,0,-1,1,0,3,0,-1,0,2,-1],\n\t\t[24,284,313,-310,-318,2,-1,2,-1,1,0,0,-1,3,1,0,-1,2,1],\n\t\t[25,284,310,-311,-319,1,-2,3,0,3,0,-2,-1,4,2,-1,-1],\n\t\t[26,284,306,-310,-318,0,-3,3,0,2,0,2,0,0,0,0,1],\n\t\t[27,285,304,-310,-320,0,-1,3,0,2,0,0,0,3,1,-1,0],\n\t\t[28,287,301,-310,-318,-1,-2,3,1,2,1,-1,-2,3,3,-1,-1],\n\t\t[29,290,299,-312,-318,1,-1,1,1,3,1,-2,-1,3,2],\n\t\t[30,292,298,-311,-318,-1,-2,3,3,1,1,-1,-1,1,1],\n\t\t[31,296,296,-312,-317,0,-1,3,4,0,0,-1,-1,2,1],\n\t\t[32,299,296,-312,-317,1,-1,2,4,0,1,0,-1,1,2,1,-1],\n\t\t[33,302,296,-311,-316,0,-1,2,3,0,1,2,2,-1,1,2,0,-1,3],\n\t\t[34,305,297,-310,-316,0,0,1,2,-1,1,2,2,-1,0,1,1,0,2,0,-1],\n\t\t[35,311,299,-311,-315,-1,-2,1,3,-1,0,1,2,-1,1,1,0,0,1,-1,-1,0,1,1,2],\n\t\t[36,315,302,-312,-317,2,0,-2,1,0,1,0,1,0,-1,-1,3,0,0,0,-2,0,3,-1,0,1,-1],\n\t\t[37,319,305,-311,-317,1,-1,-1,2,-1,0,0,-1,0,2,0,-1,-2,2,1,-1,-1,2,0,-1],\n\t\t[38,323,309,-309,-318,1,-1,-2,2,-1,0,1,-1,-1,-1,0,2,-1,-1,1,-1,-4,4],\n\t\t[39,326,311,-308,-316,2,-2,-5,1,2,-1,0,-1,-1,1,0,-2,-3,2,3,-2]\n\t],\n\t[\n\t\t[0,326,315,-307,-317,1,-1,0,0,-1,-1,3,-1,-2,0,-1,0],\n\t\t[1,328,317,-306,-317,1,0,0,-1,-1,-1,4,0,-4,-2,1,0],\n\t\t[2,331,319,-307,-316,2,-1,0,0,-1,-2,3,-1,-3,0],\n\t\t[3,334,322,-307,-316,1,0,3,-2,-4,-1,4,0,-3,-2,0,-1],\n\t\t[4,336,325,-305,-314,0,-2,2,-1,-4,-1,4,-1,-3,-2,-1,-1],\n\t\t[5,339,330,-306,-316,0,-1,-1,-2,-2,-2,3,0,-3,-1,-8,-3,-4,-2,-6,0],\n\t\t[6,342,335,-309,-317,1,-1,-3,-3,0,-1,-1,-2,-6,-2,-5,-3,-7,-2,-2,-1],\n\t\t[7,344,340,-311,-319,1,0,-3,-3,-3,-3,-1,-2,-7,-3,-5,-3,-5,-3],\n\t\t[8,344,345,-310,-318,-2,-3,-2,-4,-3,-2,-4,-4,-6,-4,-5,-3,-3,-2],\n\t\t[9,344,351,-312,-322,-1,-2,-3,-3,-2,-3,-6,-6,-6,-5,-4,-3],\n\t\t[10,342,354,-312,-319,-1,-4,-3,-5,-2,-2,-7,-8,-6,-5,-2,-3],\n\t\t[11,340,356,-312,-319,-2,-4,-2,-2,-2,-5,-7,-9,-5,-4,-2,-4],\n\t\t[12,337,357,-312,-319,-1,-2,-1,-3,-3,-3,-7,-11,-3,-4,-4,-5],\n\t\t[13,333,357,-313,-319,0,-1,-1,-1,-2,-1,-5,-11,-2,-5,-4,-7],\n\t\t[14,328,356,-312,-319,-2,-1,0,2,-1,0,-3,-6,-2,-7,-3,-9],\n\t\t[15,319,352,-311,-319,-1,1,0,3,-2,2,-1,-1,-1,-1,-1,-7,-1,-6],\n\t\t[16,312,347,-311,-318,0,1,-1,3,-2,1,-1,2,-1,1,-3,1,0,-3,-2,2,0,-4],\n\t\t[17,305,341,-311,-318,0,0,-1,3,-1,1,-3,0,1,-1,-2,1,0,0,-3,0,0,1,0,-3,-4,3],\n\t\t[18,300,337,-310,-319,0,-1,-1,1,-3,1,1,-1,-3,0,1,-1,1,-2,-2,1,1,-2,1,-1,2,-2],\n\t\t[19,297,333,-309,-318,0,-1,-1,0,-2,1,0,0,-1,-1,0,-1,2,-1,-1,0,0,-1,3,-1,0,-2],\n\t\t[20,295,330,-310,-318,1,-1,-1,0,-1,0,1,-1,-2,1,2,-2,0,0,1,-1,-2,1,4,-2],\n\t\t[21,293,327,-310,-319,2,0,-2,0,-1,-1,2,-1,-1,-1,3,0,-2,0,2,-1,-2,0],\n\t\t[22,290,323,-309,-319,2,-1,-2,1,0,-2,3,0,0,-1,0,0,0,0,2,-1],\n\t\t[23,288,318,-309,-317,3,-1,-2,-1,0,0,2,-1,2,0,-1,-1,2,1],\n\t\t[24,287,314,-310,-317,4,-1,-2,-2,1,1,0,-2,3,1,-1,0],\n\t\t[25,287,311,-311,-318,3,-1,0,-1,-1,0,3,-2,1,2,0,-2],\n\t\t[26,288,308,-313,-319,3,-1,1,0,0,-3,0,0,5,3],\n\t\t[27,289,306,-313,-319,3,-1,0,-2,0,0,1,-1],\n\t\t[28,291,304,-313,-319,1,-1,1,-1,0,-1,0,0],\n\t\t[29,293,303,-313,-321,1,1,0,-1,0,-1],\n\t\t[30,295,301,-313,-319,1,-1,0,1,-1,-1],\n\t\t[31,298,300,-313,-319,1,-1,0,1,0,-1],\n\t\t[32,301,300,-313,-320,1,1,0,1,0,-1,2,1],\n\t\t[33,303,300,-311,-319,0,1,1,1,0,0,0,1],\n\t\t[34,306,301,-311,-319,0,1,1,1,-1,0,1,2,1,1],\n\t\t[35,311,304,-311,-320,0,1,0,0,0,1,-1,2,1,-1,0,1,-1,1],\n\t\t[36,314,305,-310,-318,0,0,0,-1,-1,2,-1,1,1,0,0,-1,-1,2,0,0,0,-1],\n\t\t[37,317,308,-309,-319,1,-1,-1,2,-1,0,0,0,-1,0,1,-1,-1,1,0,0],\n\t\t[38,321,310,-309,-317,2,-1,-1,0,-2,1,2,-2,-1,1,0,-1,-1,1],\n\t\t[39,323,313,-307,-318,1,-1,-1,0,-1,1,2,-3,-1,1,-1,0]\n\t],\n\t[\n\t\t[0,322,315,-303,-316,0,-2,1,0,-2,0],\n\t\t[1,324,317,-302,-316,-1,-1,2,-1,0,0],\n\t\t[2,325,319,-299,-316,-3,0,3,-2,-1,0],\n\t\t[3,328,321,-300,-314,-1,-1,2,-1,-2,-2],\n\t\t[4,330,324,-298,-313,-3,-2,1,0,-2,-3],\n\t\t[5,333,328,-299,-313,-5,-3,3,-1,-5,-1,3,-1],\n\t\t[6,337,333,-305,-315,-2,-3,2,1,-5,-4,0,-1,-3,-1],\n\t\t[7,340,338,-310,-317,0,-3,1,0,-5,-3,-1,-2,-5,-2,-2,-3,-6,-2,-5,-2],\n\t\t[8,341,343,-312,-319,0,-1,0,-3,-4,-3,-3,-3,-3,-2,-5,-4,-4,-2,-3,-2],\n\t\t[9,341,348,-314,-321,2,-1,-3,-4,-2,-3,-3,-2,-5,-5,-4,-3,-5,-3,-1,-2],\n\t\t[10,339,352,-313,-321,0,-2,-1,-3,-3,-4,-4,-3,-4,-6,-5,-4,-3,-3],\n\t\t[11,338,354,-314,-322,0,0,-1,-3,-4,-5,-1,-3,-7,-7,-2,-4,-4,-4],\n\t\t[12,336,355,-314,-322,0,1,-1,-4,-3,-3,-3,-4,-4,-7,-3,-4,-4,-5],\n\t\t[13,333,356,-316,-323,2,1,-2,-2,-1,0,-3,-6,-2,-5,-4,-7,-3,-6],\n\t\t[14,328,354,-313,-321,-1,1,-1,-1,-1,1,-2,-2,-1,-5,-4,-10,-1,-2,-1,-8],\n\t\t[15,319,350,-311,-319,-1,1,0,0,-2,2,0,1,-1,0,-2,-4,0,-5,-2,-8],\n\t\t[16,312,346,-310,-319,-1,1,-1,-1,-1,5,-1,1,-1,-1,-2,1,0,1,-2,0,0,-4,0,-2],\n\t\t[17,305,340,-309,-319,-2,3,1,-2,-2,1,-2,2,1,-2,-2,3,-1,1,0,-2,-1,-1,-1,-1],\n\t\t[18,301,336,-310,-320,-1,2,0,-1,-1,-1,-1,0,0,0,-1,-1,-1,0,0,1,0,-3],\n\t\t[19,298,333,-309,-320,-1,2,1,-3,-1,2,-2,-1,1,0,0,-1,-1,0,1,0],\n\t\t[20,296,329,-309,-318,-1,0,1,-1,0,0,-2,0,2,-1,-1,0,0,1,0,-3],\n\t\t[21,294,327,-309,-319,1,0,-1,-1,0,0,0,-1,1,-1,0,0,-2,0],\n\t\t[22,292,323,-309,-318,1,-1,-1,-1,1,0,0,0,2,-1,-1,0],\n\t\t[23,290,318,-308,-316,-1,-2,1,0,1,0,0,-1,3,0,-1,0],\n\t\t[24,289,315,-309,-317,0,-1,1,-1,1,1,0,-2,3,1],\n\t\t[25,290,312,-313,-317,2,-2,1,-1,1,0,0,-1],\n\t\t[26,291,310,-315,-320,3,-1,-1,-2],\n\t\t[27,292,308,-315,-320,1,-2,0,-1],\n\t\t[28,294,306,-316,-321,1,0,-1,-2],\n\t\t[29,296,305,-316,-322,0,0],\n\t\t[30,297,304,-314,-322,-2,-1],\n\t\t[31,300,303,-314,-321,-2,-2],\n\t\t[32,303,304,-315,-323,0,-1,1,-1],\n\t\t[33,305,304,-314,-323,1,1,0,0],\n\t\t[34,307,305,-313,-323,1,1,0,0,1,2],\n\t\t[35,311,307,-311,-322,0,2,1,-3,-1,3,0,0],\n\t\t[36,313,308,-308,-320,-2,-1,1,0,-1,1,0,1,0,-1],\n\t\t[37,315,310,-306,-320,0,0,-1,-1,-1,2,0,-2,0,2],\n\t\t[38,318,312,-305,-319,0,0,0,-1,-1,1,1,-2],\n\t\t[39,320,314,-304,-319,0,0,0,-1,-1,1,2,-2]\n\t],\n\t[\n\t\t[0,321,316,-302,-318,0,0],\n\t\t[1,321,317,-297,-316,-2,-1],\n\t\t[2,324,319,-298,-315,-3,-1],\n\t\t[3,326,321,-297,-314,-3,0],\n\t\t[4,328,323,-296,-311,-4,-3],\n\t\t[5,332,327,-300,-312,-3,-2],\n\t\t[6,335,333,-303,-315,-4,-3],\n\t\t[7,338,338,-308,-317,-3,-4,0,0],\n\t\t[8,339,343,-310,-319,-3,-3,0,-2],\n\t\t[9,339,347,-312,-320,-2,-4,-1,-1,-2,-4,-2,-2],\n\t\t[10,338,350,-314,-320,0,-3,-2,-2,-2,-4,-2,-2,-4,-4,-3,-4,-4,-4,-2,-3],\n\t\t[11,337,353,-315,-323,0,-1,-1,-2,-3,-4,-1,-2,-4,-5,-3,-5,-4,-2],\n\t\t[12,335,354,-314,-323,-1,0,0,-2,-4,-5,-1,-1,-3,-5,-3,-5,-3,-4],\n\t\t[13,332,354,-314,-321,-1,-2,-1,0,-2,-4,0,0,-4,-6,-2,-7,-2,-1],\n\t\t[14,328,353,-312,-320,-3,-1,0,0,-2,-3,-1,0,-2,-4,-1,-4,-2,-5],\n\t\t[15,320,350,-313,-321,1,3,-2,-1,0,1,-1,-2,-2,0,0,1,-1,-4],\n\t\t[16,312,345,-310,-319,-1,4,0,-5,-1,5,-2,-3,0,3,-2,1,-1,0],\n\t\t[17,306,340,-310,-319,-1,3,-1,-4,0,3,0,-2,-2,3,0,0],\n\t\t[18,302,336,-311,-320,-1,2,1,-3,-1,0,-1,1],\n\t\t[19,299,332,-310,-318,-1,1,1,-2,1,-1,-3,1],\n\t\t[20,297,329,-310,-318,-1,0,1,0,2,-3,-2,2],\n\t\t[21,295,327,-309,-319,-2,0,2,0,1,-2],\n\t\t[22,293,323,-309,-317,-1,-1,1,-1,2,-1],\n\t\t[23,291,319,-309,-317,-1,-1,1,0,4,-1],\n\t\t[24,291,316,-312,-318,1,0],\n\t\t[25,291,313,-314,-319],\n\t\t[26,292,310,-316,-319],\n\t\t[27,294,309,-319,-322],\n\t\t[28,295,308,-319,-324],\n\t\t[29,298,306],\n\t\t[30,299,306],\n\t\t[31,302,305],\n\t\t[32,304,305,-317,-325],\n\t\t[33,305,305,-314,-323],\n\t\t[34,307,306,-314,-325],\n\t\t[35,311,308,-310,-323,-1,1],\n\t\t[36,313,309,-308,-321,-1,0],\n\t\t[37,315,311,-307,-321,1,0],\n\t\t[38,317,313,-304,-320,0,0],\n\t\t[39,319,314,-303,-318,0,-1]\n\t]\n];\n", "/**\n * This class converts the PCCS color system.\n * Colors where h is -1 are handled especially as an achromatic color (n).\n * Reference: KOBAYASHI Mituo and YOSIKI Kayoko,\n * Mathematical Relation among PCCS Tones, PCCS Color Attributes and Munsell Color Attributes,\n * Journal of the Color Science Association of Japan 25(4), 249-261, 2001.\n *\n * @author Takuto Yanagida\n * @version 2024-07-25\n */\n\nimport { Triplet } from './_triplet';\nimport { Munsell } from './_cs-munsell';\n\nexport class PCCS {\n\n\n\t// Calculation of PCCS value (accurate) ------------------------------------\n\n\n\tprivate static _calcPccsH(H: number): number {\n\t\tlet h1 = -1, h2 = -1;\n\t\tfor (let i = 1; i < PCCS._MUNSELL_H.length; ++i) {\n\t\t\tif (PCCS._MUNSELL_H[i] <= H) h1 = i;\n\t\t\tif (H < PCCS._MUNSELL_H[i]) {\n\t\t\t\th2 = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (h1 == -1) console.error(\"h1 is -1, H = \" + H);\n\t\tif (h2 == -1) console.error(\"h2 is -1, H = \" + H);\n\t\treturn h1 + (h2 - h1) * (H - PCCS._MUNSELL_H[h1]) / (PCCS._MUNSELL_H[h2] - PCCS._MUNSELL_H[h1]);\n\t}\n\n\tprivate static _calcPccsS(V: number, C: number, h: number) {\n\t\tconst a = PCCS._calcInterpolatedCoefficients(h);\n\t\tconst g = 0.81 - 0.24 * Math.sin((h - 2.6) / 12 * Math.PI);\n\t\tconst a0 = -C / (1 - Math.exp(-g * V));\n\t\treturn PCCS._solveEquation(PCCS._simplyCalcPccsS(V, C, h), a[3], a[2], a[1], a0);\n\t}\n\n\tprivate static _calcInterpolatedCoefficients(h: number) {\n\t\tif (PCCS._MAX_HUE < h) h -= PCCS._MAX_HUE;\n\t\tlet hf = 0 | Math.floor(h);\n\t\tif (hf % 2 != 0) --hf;\n\t\tlet hc = hf + 2;\n\t\tif (PCCS._MAX_HUE < hc) hc -= PCCS._MAX_HUE;\n\n\t\tconst af = PCCS._COEFFICIENTS[hf / 2], ac = PCCS._COEFFICIENTS[hc / 2], a = [0, 0, 0, 0];\n\t\tfor (let i = 0; i < 3; ++i) {\n\t\t\ta[i + 1] = (h - hf) / (hc - hf) * (ac[i]- af[i]) + af[i];\n\t\t}\n\t\treturn a;\n\t}\n\n\tprivate static _solveEquation(x0: number, a3: number, a2: number, a1: number, a0: number): number {\n\t\tlet x = x0;\n\t\twhile (true) {\n\t\t\tconst y = a3 * x * x * x + a2 * x * x + a1 * x + a0;\n\t\t\tconst yp = 3 * a3 * x * x + 2 * a2 * x + a1;\n\t\t\tconst x1 = -y / yp + x;\n\t\t\tif (Math.abs(x1 - x) < 0.001) break;\n\t\t\tx = x1;\n\t\t}\n\t\treturn x;\n\t}\n\n\n\t// Calculation of Munsell value (accurate) ---------------------------------\n\n\n\tprivate static _calcMunsellH(h: number): number {\n\t\tconst h1 = 0 | Math.floor(h), h2 = h1 + 1;\n\t\tlet H1 = PCCS._MUNSELL_H[h1], H2 = PCCS._MUNSELL_H[h2];\n\t\tif (H1 > H2) H2 = 100;\n\t\treturn H1 + (H2 - H1) * (h - h1) / (h2 - h1);\n\t}\n\n\tprivate static _calcMunsellC(h: number, l: number, s: number): number {\n\t\tconst a = PCCS._calcInterpolatedCoefficients(h);\n\t\tconst g = 0.81 - 0.24 * Math.sin((h - 2.6) / 12 * Math.PI);\n\t\treturn (a[3] * s * s * s + a[2] * s * s + a[1] * s) * (1 - Math.exp(-g * l));\n\t}\n\n\n\t// Calculation of PCCS value (concise) -------------------------------------\n\n\n\tprivate static _simplyCalcPccsH(H: number): number {\n\t\tconst y = H * Math.PI / 50;\n\t\treturn 24 * y / (2 * Math.PI) + 1.24\n\t\t\t\t+ 0.02 * Math.cos(y) - 0.1 * Math.cos(2 * y) - 0.11  * Math.cos(3 * y)\n\t\t\t\t+ 0.68 * Math.sin(y) - 0.3 * Math.sin(2 * y) + 0.013 * Math.sin(3 * y);\n\t}\n\n\tprivate static _simplyCalcPccsS(V: number, C: number, h: number): number {\n\t\tconst Ct = 12 + 1.7 * Math.sin((h + 2.2) * Math.PI / 12);\n\t\tconst gt = 0.81 - 0.24 * Math.sin((h - 2.6) * Math.PI / 12);\n\t\tconst e2 = 0.004, e1 = 0.077, e0 = -C / (Ct * (1 - Math.exp(-gt * V)));\n\t\treturn (-e1 + Math.sqrt(e1 * e1 - 4 * e2 * e0)) / (2 * e2);\n\t}\n\n\n\t// Calculation of Munsell value (concise) ----------------------------------\n\n\n\tprivate static _simplyCalcMunsellH(h: number): number {\n\t\tconst x = (h - 1) * Math.PI / 12;\n\t\treturn 100 * x / (2 * Math.PI) - 1\n\t\t\t\t+ 0.12 * Math.cos(x) + 0.34 * Math.cos(2 * x) + 0.4 * Math.cos(3 * x)\n\t\t\t\t- 2.7  * Math.sin(x) + 1.5  * Math.sin(2 * x) - 0.4 * Math.sin(3 * x);\n\t}\n\n\tprivate static _simplyCalcMunsellC(h: number, l: number, s: number): number {\n\t\tconst Ct = 12 + 1.7 * Math.sin((h + 2.2) * Math.PI / 12);\n\t\tconst gt = 0.81 - 0.24 * Math.sin((h - 2.6) * Math.PI / 12);\n\t\treturn Ct * (0.077 * s + 0.0040 * s * s) * (1 - Math.exp(-gt * l));\n\t}\n\n\t/**\n\t * Convert Munsell (HVC) to PCCS (hls).\n\t * @param {number[]} hvc Hue, value, chroma of Munsell color\n\t * @return {number[]} PCCS color\n\t */\n\tstatic fromMunsell([H, V, C]: Triplet): Triplet {\n\t\tif (Munsell._MAX_HUE <= H) H -= Munsell._MAX_HUE;\n\t\tlet h = 0, l = V, s = 0;\n\n\t\th = PCCS.conversionMethod._calcPccsH(H);\n\t\tif (Munsell.MONO_LIMIT_C <= C) {\n\t\t\ts = PCCS.conversionMethod._calcPccsS(V, C, h);\n\t\t}\n\t\tif (PCCS._MAX_HUE <= h) h -= PCCS._MAX_HUE;\n\t\treturn [h, l, s];\n\t}\n\n\t/**\n\t * Convert PCCS (hls) to Munsell (HVC).\n\t * @param {number[]} hls Hue, lightness, saturation of PCCS color\n\t * @return {number[]} Munsell color\n\t */\n\tstatic toMunsell([h, l, s]: Triplet): Triplet {\n\t\tlet H = 0, V = l, C = 0;\n\n\t\tH = PCCS.conversionMethod._calcMunsellH(h);\n\t\tif (PCCS._MONO_LIMIT_S <= s) {\n\t\t\tC = PCCS.conversionMethod._calcMunsellC(h, l, s);\n\t\t}\n\t\tif (H < 0) H += Munsell._MAX_HUE;\n\t\tif (Munsell._MAX_HUE <= H) H -= Munsell._MAX_HUE;\n\t\treturn [H, V, C];\n\t}\n\n\t/**\n\t * Calculate tone.\n\t * @param {number[]} hls Hue, lightness, saturation of PCCS color\n\t * @return {number} Tone\n\t */\n\tstatic tone(hls: Triplet): number {\n\t\tconst s = hls[2];\n\t\tconst t = PCCS.relativeLightness(hls);\n\t\tconst tu = s * -3 / 10 + 8.5, td = s * 3 / 10 + 2.5;\n\n\t\tif (s < 1) {\n\t\t\treturn PCCS.Tone.none;\n\t\t} else if (1 <= s && s < 4) {\n\t\t\tif (t < td)  return PCCS.Tone.dkg;\n\t\t\tif (t < 5.5) return PCCS.Tone.g;\n\t\t\tif (t < tu)  return PCCS.Tone.ltg;\n\t\t\tif (s < 2.5) return PCCS.Tone.p;\n\t\t\treturn PCCS.Tone.p_p;\n\t\t} else if (4 <= s && s < 7) {\n\t\t\tif (t < td)  return PCCS.Tone.dk;\n\t\t\tif (t < 5.5) return PCCS.Tone.d;\n\t\t\tif (t < tu)  return PCCS.Tone.sf;\n\t\t\tif (s < 5.5) return PCCS.Tone.lt;\n\t\t\treturn PCCS.Tone.lt_p;\n\t\t} else if (7 <= s && s < 8.5) {\n\t\t\tif (t < td) return PCCS.Tone.dp;\n\t\t\tif (t < tu) return PCCS.Tone.s;\n\t\t\treturn PCCS.Tone.b;\n\t\t} else {\n\t\t\treturn PCCS.Tone.v;\n\t\t}\n\t}\n\n\t/**\n\t * Return relative lightness (lightness in tone coordinate system).\n\t * @param {number[]} hls Hue, lightness, saturation of PCCS color\n\t * @return {number[]} Relative lightness L\n\t */\n\tstatic relativeLightness([h, l, s]: Triplet): number {\n\t\treturn l - (0.25 - 0.34 * Math.sqrt(1 - Math.sin((h - 2) * Math.PI / 12))) * s;\n\t}\n\n\t/**\n\t * Return absolute lightness (lightness in PCCS).\n\t * @param {number[]} hLs Tone coordinate color\n\t * @return {number[]} Absolute lightness l\n\t */\n\tstatic absoluteLightness([h, L, s]: Triplet): number {\n\t\treturn L + (0.25 - 0.34 * Math.sqrt(1 - Math.sin((h - 2) * Math.PI / 12))) * s;\n\t}\n\n\t/**\n\t * Convert PCCS color to tone coordinate color.\n\t * @param {number[]} hls Hue, lightness, saturation of PCCS color\n\t * @return {number[]} Tone coordinate color\n\t */\n\tstatic toToneCoordinate(hls: Triplet): Triplet {\n\t\treturn [hls[0], PCCS.relativeLightness(hls), hls[2]];\n\t}\n\n\t/**\n\t * Convert tone coordinate color to PCCS color.\n\t * @param {number[]} hLs Tone coordinate color\n\t * @return {number[]} PCCS color\n\t */\n\tstatic toNormalCoordinate(hLs: Triplet): Triplet {\n\t\treturn [hLs[0], PCCS.absoluteLightness(hLs), hLs[2]];\n\t}\n\n\t/**\n\t * Returns the string representation of PCCS numerical representation.\n\t * @param {number[]} hls Hue, lightness, saturation of PCCS color\n\t * @return {string} String representation\n\t */\n\tstatic toString(hls: Triplet): string {\n\t\tconst str_l = Math.round(hls[1] * 10) / 10;\n\t\tif (hls[2] < PCCS._MONO_LIMIT_S) {\n\t\t\tif (9.5 <= hls[1]) return `W N-${str_l}`;\n\t\t\tif (hls[1] <= 1.5) return `Bk N-${str_l}`;\n\t\t\treturn `Gy-${str_l} N-${str_l}`;\n\t\t} else {\n\t\t\tconst str_h = Math.round(hls[0] * 10) / 10;\n\t\t\tconst str_s = Math.round(hls[2] * 10) / 10;\n\n\t\t\tlet tn = Math.round(hls[0]);\n\t\t\tif (tn <= 0) tn = PCCS._MAX_HUE;\n\t\t\tif (PCCS._MAX_HUE < tn) tn -= PCCS._MAX_HUE;\n\t\t\tconst hue = PCCS._HUE_NAMES[tn];\n\t\t\tconst tone = PCCS._TONE_NAMES[PCCS.tone(hls)];\n\n\t\t\tif (tone == 'none') return `${str_h}:${hue}-${str_l}-${str_s}s`;\n\t\t\treturn `${tone}${str_h} ${str_h}:${hue}-${str_l}-${str_s}s`;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the string representation of PCCS hues.\n\t * @param {number[]} hls Hue, lightness, saturation of PCCS color\n\t * @return {string} String representation of hues\n\t */\n\tstatic toHueString([h,, s]: Triplet): string {\n\t\tif (s < PCCS._MONO_LIMIT_S) {\n\t\t\treturn 'N';\n\t\t} else {\n\t\t\tlet tn = Math.round(h);\n\t\t\tif (tn <= 0) tn = PCCS._MAX_HUE;\n\t\t\tif (PCCS._MAX_HUE < tn) tn -= PCCS._MAX_HUE;\n\t\t\treturn PCCS._HUE_NAMES[tn];\n\t\t}\n\t}\n\n\t/**\n\t * Returns the string representation of PCCS tones.\n\t * @param {number[]} hls Hue, lightness, saturation of PCCS color\n\t * @return {string} String representation of tones\n\t */\n\tstatic toToneString(hls: Triplet): string {\n\t\tif (hls[2] < PCCS._MONO_LIMIT_S) {\n\t\t\tif (9.5 <= hls[1]) return 'W';\n\t\t\tif (hls[1] <= 1.5) return 'Bk';\n\t\t\treturn 'Gy';\n\t\t} else {\n\t\t\treturn PCCS._TONE_NAMES[PCCS.tone(hls)];\n\t\t}\n\t}\n\n\t// Hue [0, 24), 24 is also acceptable\n\tprivate static _MAX_HUE = 24;  // same as MIN_HUE\n\tprivate static _MONO_LIMIT_S = 0.01;\n\tprivate static _HUE_NAMES  = ['', 'pR', 'R', 'yR', 'rO', 'O', 'yO', 'rY', 'Y', 'gY', 'YG', 'yG', 'G', 'bG', 'GB', 'GB', 'gB', 'B', 'B', 'pB', 'V', 'bP', 'P', 'rP', 'RP'];\n\tprivate static _TONE_NAMES = ['p', 'p+', 'ltg', 'g', 'dkg', 'lt', 'lt+', 'sf', 'd', 'dk', 'b', 's', 'dp', 'v', 'none'];\n\tprivate static _MUNSELL_H = [\n\t\t96,  // Dummy\n\t\t0,  4,  7, 10, 14, 18, 22, 25, 28, 33, 38, 43,\n\t\t49, 55, 60, 65, 70, 73, 76, 79, 83, 87, 91, 96, 100\n\t];\n\tprivate static _COEFFICIENTS = [\n\t\t[0.853642,  0.084379, -0.002798],  // 0 == 24\n\t\t[1.042805,  0.046437,  0.001607],  // 2\n\t\t[1.079160,  0.025470,  0.003052],  // 4\n\t\t[1.039472,  0.054749, -0.000511],  // 6\n\t\t[0.925185,  0.050245,  0.000953],  // 8\n\t\t[0.968557,  0.012537,  0.003375],  // 10\n\t\t[1.070433, -0.047359,  0.007385],  // 12\n\t\t[1.087030, -0.051075,  0.006526],  // 14\n\t\t[1.089652, -0.050206,  0.006056],  // 16\n\t\t[0.880861,  0.060300, -0.001280],  // 18\n\t\t[0.897326,  0.053912, -0.000860],  // 20\n\t\t[0.887834,  0.055086, -0.000847],  // 22\n\t\t[0.853642,  0.084379, -0.002798],  // 24\n\t];\n\n\t/**\n\t * Enum type for conversion methods.\n\t */\n\tstatic ConversionMethod = Object.freeze({\n\t\t/**\n\t\t * Concise conversion\n\t\t */\n\t\tCONCISE: {\n\t\t\t_calcMunsellH: PCCS._simplyCalcMunsellH,\n\t\t\t_calcMunsellS: PCCS._simplyCalcMunsellC,\n\t\t\t_calcPccsH: PCCS._simplyCalcPccsH,\n\t\t\t_calcPccsS: PCCS._simplyCalcPccsS,\n\t\t},\n\n\t\t/**\n\t\t * Accurate conversion\n\t\t */\n\t\tACCURATE: {\n\t\t\t_calcMunsellH: PCCS._calcMunsellH,\n\t\t\t_calcMunsellC: PCCS._calcMunsellC,\n\t\t\t_calcPccsH: PCCS._calcPccsH,\n\t\t\t_calcPccsS: PCCS._calcPccsS,\n\t\t}\n\t});\n\n\t/**\n\t * Indicates the currently selected color vision characteristic conversion method.\n\t */\n\tstatic conversionMethod = PCCS.ConversionMethod.ACCURATE;\n\n\t/**\n\t * Enum type for Tone.\n\t */\n\tstatic Tone = Object.freeze({\n\t\tp   : 0,\n\t\tp_p : 1,\n\t\tltg : 2,\n\t\tg   : 3,\n\t\tdkg : 4,\n\t\tlt  : 5,\n\t\tlt_p: 6,\n\t\tsf  : 7,\n\t\td   : 8,\n\t\tdk  : 9,\n\t\tb   : 10,\n\t\ts   : 11,\n\t\tdp  : 12,\n\t\tv   : 13,\n\t\tnone: 14\n\t});\n}\n", "/**\n * This class converts the Munsell (HVC) color system.\n * D65 is used as tristimulus value.\n * Since conversion is performed by approximation based on the distance to the sample color, the conversion result is approximate value.\n * Also, when H is -1, it is regarded as an achromatic color (N) in particular.\n * Reference: http://www.cis.rit.edu/mcsl/online/munsell.php\n *\n * @author Takuto Yanagida\n * @version 2024-07-25\n */\n\nimport { _TBL_SRC_MIN } from './table/_hc2xy-real-min';\nimport { Triplet } from './_triplet';\nimport { XYZ } from './_cs-xyz';\nimport { Yxy } from './_cs-yxy';\nimport { PCCS } from './_cs-pccs';\n\nexport class Munsell {\n\n\tstatic isSaturated = false;\n\n\tprivate static _getXy(vi: number, h10: number, c: number) {\n\t\tif (c === 0) return Munsell._ILLUMINANT_C;\n\t\treturn Munsell._TBL[vi][h10 / 25][c / 2];\n\t}\n\n\t// Find Y of XYZ (C) from Munsell's V (JIS).\n\tprivate static _v2y(v: number) {\n\t\tif (v <= 1) return v * 0.0121;\n\t\tconst v2 = v * v, v3 = v2 * v;\n\t\tconst y = 0.0467 * v3 + 0.5602 * v2 - 0.1753 * v + 0.8007;\n\t\treturn y / 100;\n\t}\n\n\t// Munsell's V is obtained from Y of XYZ (C) (JIS, Newton's method).\n\tprivate static _y2v(y: number) {\n\t\tif (y <= 0.0121) return y / 0.0121;\n\t\tlet v = 10;\n\t\twhile (true) {\n\t\t\tconst f = Munsell._v2y(v) * 100 - y * 100;\n\t\t\tconst fp = 3 * 0.0467 * (v * v) + 2 * 0.5602 * v - 0.1753;\n\t\t\tconst v1 = -f / fp + v;\n\t\t\tif (Math.abs(v1 - v) < 0.01) break;\n\t\t\tv = v1;\n\t\t}\n\t\treturn v;\n\t}\n\n\tprivate static _eq(a: number, b: number) {\n\t\treturn Math.abs(a - b) < Munsell._EP;\n\t}\n\n\tprivate static _eq0(a: number) {\n\t\treturn Math.abs(a) < Munsell._EP;\n\t}\n\n\t// Find the Munsell value from xyY (standard illuminant C).\n\tprivate static _yxy2mun([Y, x, y]: Triplet): Triplet {\n\t\tconst v = Munsell._y2v(Y);  // Find Munsell lightness\n\n\t\t// When the lightness is maximum 10\n\t\tif (Munsell._eq(v, Munsell._TBL_V[Munsell._TBL_V.length - 1])) {\n\t\t\tconst hc = Munsell._interpolateHC(x, y, Munsell._TBL_V.length - 1);\n\t\t\treturn [hc[0], v, hc[1]];\n\t\t}\n\t\t// When the lightness is 0 or the lightness is larger than the maximum 10, or when it is an achromatic color (standard illuminant C)\n\t\tif (Munsell._eq0(v) || Munsell._TBL_V[Munsell._TBL_V.length - 1] < v || (Munsell._eq(x, Munsell._ILLUMINANT_C[0]) && Munsell._eq(y, Munsell._ILLUMINANT_C[1]))) {\n\t\t\treturn [0, v, 0];\n\t\t}\n\t\t// Obtain lower side\n\t\tlet vi_l = -1;\n\t\twhile (Munsell._TBL_V[vi_l + 1] <= v) ++vi_l;\n\t\tlet hc_l = [0, 0];  // Hue and chroma of the lower side\n\t\tif (vi_l != -1) hc_l = Munsell._interpolateHC(x, y, vi_l);\n\n\t\t// Obtain upper side\n\t\tconst vi_u = vi_l + 1;\n\t\tconst hc_u = Munsell._interpolateHC(x, y, vi_u);\n\n\t\t// When the lightness on the lower side is the minimum 0, the hue is matched with the upper side, and the chroma is set to 0\n\t\tif (vi_l == -1) {\n\t\t\thc_l[0] = hc_u[0]; hc_l[1] = 0;\n\t\t}\n\t\tconst v_l = ((vi_l == -1) ? 0 : Munsell._TBL_V[vi_l]), v_h = Munsell._TBL_V[vi_u];\n\t\tconst r = (v - v_l) / (v_h - v_l);\n\t\tlet h = (hc_u[0] - hc_l[0]) * r + hc_l[0];\n\t\tif (Munsell._MAX_HUE <= h) h -= Munsell._MAX_HUE;\n\t\tlet c = (hc_u[1] - hc_l[1]) * r + hc_l[1];\n\t\tif (c < Munsell.MONO_LIMIT_C) c = 0;\n\t\treturn [h, v, c];\n\t}\n\n\t// Acquires the hue and chroma for the chromaticity coordinates (x, y) on the surface of the given lightness index.\n\t// If not included, -1 is returned.\n\tprivate static _interpolateHC(x: number, y: number, vi: number): [number, number] {\n\t\tlet h10_l, h10_u = -1, c_l = -1, c_u = -1;\n\t\tlet hv = null;\n\n\t\tout:\n\t\tfor (h10_l = 0; h10_l <= 975; h10_l += 25) {  // h 0-975 step 25;\n\t\t\th10_u = h10_l + 25;\n\t\t\tif (h10_u == 1000) h10_u = 0;\n\n\t\t\tinner:\n\t\t\tfor (c_l = 0; c_l <= 50; c_l += 2) {  // c 0-50 step 2;\n\t\t\t\tc_u = c_l + 2;\n\n\t\t\t\tconst a = Munsell._getXy(vi, h10_l, c_l), d = Munsell._getXy(vi, h10_l, c_u);\n\t\t\t\tconst b = Munsell._getXy(vi, h10_u, c_l), c = Munsell._getXy(vi, h10_u, c_u);\n\t\t\t\tif (a == null && b == null) break inner;\n\t\t\t\tif (a == null || b == null || c == null || d == null) continue;\n\t\t\t\t//  ^\n\t\t\t\t// y| B C      \u2196H (Direction of rotation) \u2197C (Radial direction)\n\t\t\t\t//  | A D\n\t\t\t\t//  ------> x\n\t\t\t\tif (a[0] == b[0] && a[1] == b[1]) {\n\t\t\t\t\tif (Munsell._isInside(a, c, d, x, y)) hv = Munsell._interpolationRatio(x, y, a, d, b, c);\n\t\t\t\t} else {\n\t\t\t\t\tif (Munsell._isInside(a, c, d, x, y) || Munsell._isInside(a, b, c, x, y)) hv = Munsell._interpolationRatio(x, y, a, d, b, c);\n\t\t\t\t}\n\t\t\t\tif (hv != null) break out;\n\t\t\t}\n\t\t}\n\t\tif (hv === null) {\n\t\t\treturn [0, 0];\n\t\t}\n\t\tif (h10_u == 0) h10_u = 1000;\n\t\treturn [((h10_u - h10_l) * hv[0] + h10_l) / 10, (c_u - c_l) * hv[1] + c_l];\n\t}\n\n\t// Whether a point (x, y) exists within the interior (including the boundary) of the clockwise triangle abc\n\t// in the mathematical coordinate system (positive on the y axis is upward)\n\tprivate static _isInside(a: [number, number], b: [number, number], c: [number, number], x: number, y: number) {\n\t\t// If x, y are on the right side of ab, the point is outside the triangle\n\t\tif (Munsell._cross(x - a[0], y - a[1], b[0] - a[0], b[1] - a[1]) < 0) return false;\n\t\t// If x, y are on the right side of bc, the point is outside the triangle\n\t\tif (Munsell._cross(x - b[0], y - b[1], c[0] - b[0], c[1] - b[1]) < 0) return false;\n\t\t// If x, y are on the right side of ca, the point is outside the triangle\n\t\tif (Munsell._cross(x - c[0], y - c[1], a[0] - c[0], a[1] - c[1]) < 0) return false;\n\t\treturn true;\n\t}\n\n\tprivate static _cross(ax: number, ay: number, bx: number, by: number): number {\n\t\treturn ax * by - ay * bx;\n\t}\n\n\t/*\n\t * Calculate the proportion [h, v] of each point in the area surrounded by the points of the following placement (null if it is invalid).\n\t *  ^\n\t * y| B C      \u2196H (Direction of rotation) \u2197C (Radial direction)\n\t *  | A D\n\t *  ------> x\n\t */\n\tprivate static _interpolationRatio(x: number, y: number, a: [number, number], d: [number, number], b: [number, number], c: [number, number]): [number, number]|null {\n\t\t// Find the ratio in the vertical direction\n\t\tlet v = -1;\n\n\t\t// Solve a v^2 + b v + c = 0\n\t\tconst ea = (a[0] - d[0]) * (a[1] + c[1] - b[1] - d[1]) - (a[0] + c[0] - b[0] - d[0]) * (a[1] - d[1]);\n\t\tconst eb = (x - a[0]) * (a[1] + c[1] - b[1] - d[1]) + (a[0] - d[0]) * (b[1] - a[1]) - (a[0] + c[0] - b[0] - d[0]) * (y - a[1]) - (b[0] - a[0]) * (a[1] - d[1]);\n\t\tconst ec = (x - a[0]) * (b[1] - a[1]) - (y - a[1]) * (b[0] - a[0]);\n\n\t\tif (Munsell._eq0(ea)) {\n\t\t\tif (!Munsell._eq0(eb)) v = -ec / eb;\n\t\t} else {\n\t\t\tconst rt = Math.sqrt(eb * eb - 4 * ea * ec);\n\t\t\tconst v1 = (-eb + rt) / (2 * ea), v2 = (-eb - rt) / (2 * ea);\n\n\t\t\tif (a[0] == b[0] && a[1] == b[1]) {  // In this case, v1 is always 0, but this is not a solution.\n\t\t\t\tif (0 <= v2 && v2 <= 1) v = v2;\n\t\t\t} else {\n\t\t\t\tif      (0 <= v1 && v1 <= 1) v = v1;\n\t\t\t\telse if (0 <= v2 && v2 <= 1) v = v2;\n\t\t\t}\n\t\t}\n\t\tif (v < 0) return null;\n\n\t\t// Find the ratio in the horizontal direction\n\t\tlet h = -1, h1 = -1, h2 = -1;\n\t\tconst deX = (a[0] - d[0] - b[0] + c[0]) * v - a[0] + b[0];\n\t\tconst deY = (a[1] - d[1] - b[1] + c[1]) * v - a[1] + b[1];\n\n\t\tif (!Munsell._eq0(deX)) h1 = ((a[0] - d[0]) * v + x - a[0]) / deX;\n\t\tif (!Munsell._eq0(deY)) h2 = ((a[1] - d[1]) * v + y - a[1]) / deY;\n\n\t\tif      (0 <= h1 && h1 <= 1) h = h1;\n\t\telse if (0 <= h2 && h2 <= 1) h = h2;\n\n\t\tif (h < 0) return null;\n\n\t\treturn [h, v];\n\t}\n\n\t/**\n\t * Convert name-based hue expression to hue value.\n\t * If the Name-based hue expression is N, -1 is returned.\n\t * @param {string} hueName Name-based hue expression\n\t * @return {number} Hue value\n\t */\n\tstatic hueNameToHueValue(hueName: string): number {\n\t\tif (hueName.length == 1) return -1;  // In case of achromatic color N\n\n\t\tfunction isDigit(s: string) { return Number.isInteger(parseInt(s)); }\n\t\tconst len = isDigit(hueName.charAt(hueName.length - 2)) ? 1 : 2;  // Length of color name\n\t\tconst n = hueName.substring(hueName.length - len);\n\n\t\tlet hv = parseFloat(hueName.substring(0, hueName.length - len));\n\t\thv += Munsell._HUE_NAMES.indexOf(n) * 10;\n\t\tif (Munsell._MAX_HUE <= hv) hv -= Munsell._MAX_HUE;\n\t\treturn hv;\n\t}\n\n\t/**\n\t * Convert hue value to name-based hue expression.\n\t * If the hue value is -1, or if the chroma value is 0, N is returned.\n\t * @param {number} hue Hue value\n\t * @param {number} chroma Chroma value\n\t * @return {string} Name-based hue expression\n\t */\n\tstatic hueValueToHueName(hue: number, chroma: number): string {\n\t\tif (hue == -1 || Munsell._eq0(chroma)) return 'N';\n\t\tif (hue <= 0) hue += Munsell._MAX_HUE;\n\t\tlet h10 = (0 | hue * 10) % 100;\n\t\tlet c = 0 | (hue / 10);\n\t\tif (h10 === 0) {\n\t\t\th10 = 100;\n\t\t\tc -= 1;\n\t\t}\n\t\treturn (Math.round(h10 * 10) / 100) + Munsell._HUE_NAMES[c];\n\t}\n\n\t/**\n\t * Convert CIE 1931 XYZ to Munsell (HVC).\n\t * @param {number[]} xyz XYZ color (standard illuminant D65)\n\t * @return {number[]} Munsell color\n\t */\n\tstatic fromXYZ(xyz: Triplet): Triplet {\n\t\treturn Munsell._yxy2mun(Yxy.fromXYZ(XYZ.toIlluminantC(xyz)));\n\t}\n\n\t/**\n\t * Convert Munsell (HVC) to CIE 1931 XYZ.\n\t * @param {number[]} hvc Hue, value, chroma of Munsell color\n\t * @return {number[]} XYZ color\n\t */\n\tstatic toXYZ([h, v, c]: Triplet): Triplet {\n\t\tif (Munsell._MAX_HUE <= h) h -= Munsell._MAX_HUE;\n\t\tconst dest: Triplet = [Munsell._v2y(v), 0, 0];\n\t\tMunsell.isSaturated = false;\n\n\t\t// When the lightness is 0 or achromatic (check this first)\n\t\tif (Munsell._eq0(v) || h < 0 || c < Munsell.MONO_LIMIT_C) {\n\t\t\tdest[1] = Munsell._ILLUMINANT_C[0]; dest[2] = Munsell._ILLUMINANT_C[1];\n\t\t\tMunsell.isSaturated = Munsell._eq0(v) && 0 < c;\n\t\t\treturn XYZ.fromIlluminantC(Yxy.toXYZ(dest));\n\t\t}\n\t\t// When the lightness is the maximum value 10 or more\n\t\tif (Munsell._TBL_V[Munsell._TBL_V.length - 1] <= v) {\n\t\t\tconst xy = Munsell._interpolateXY(h, c, Munsell._TBL_V.length - 1);\n\t\t\tdest[1] = xy[0]; dest[2] = xy[1];\n\t\t\tMunsell.isSaturated = (Munsell._TBL_V[Munsell._TBL_V.length - 1] < v);\n\t\t\treturn XYZ.fromIlluminantC(Yxy.toXYZ(dest));\n\t\t}\n\t\tlet vi_l = -1;\n\t\twhile (Munsell._TBL_V[vi_l + 1] <= v) ++vi_l;\n\t\tconst vi_u = vi_l + 1;\n\n\t\t// Obtain lower side\n\t\tlet xy_l: [number, number, boolean] = [0, 0, false];\n\t\tif (vi_l != -1) {\n\t\t\txy_l = Munsell._interpolateXY(h, c, vi_l);\n\t\t\tif (!xy_l[2]) Munsell.isSaturated = true;\n\t\t} else {  // When the lightness of the lower side is the minimum 0, use standard illuminant.\n\t\t\txy_l[0] = Munsell._ILLUMINANT_C[0]; xy_l[1] = Munsell._ILLUMINANT_C[1];\n\t\t\tMunsell.isSaturated = true;\n\t\t}\n\t\t// Obtain upper side\n\t\tconst xy_u = Munsell._interpolateXY(h, c, vi_u);\n\t\tif (!xy_u[2]) Munsell.isSaturated = true;\n\n\t\tconst v_l = ((vi_l == -1) ? 0 : Munsell._TBL_V[vi_l]), v_h = Munsell._TBL_V[vi_u];\n\t\tconst r = (v - v_l) / (v_h - v_l);\n\t\tconst x = (xy_u[0] - xy_l[0]) * r + xy_l[0], y = (xy_u[1] - xy_l[1]) * r + xy_l[1];\n\t\tdest[1] = x; dest[2] = y;\n\n\t\treturn XYZ.fromIlluminantC(Yxy.toXYZ(dest));\n\t}\n\n\t/**\n\t * Convert Munsell (HVC) to PCCS (hls).\n\t * @param {number[]} hvc Hue, value, chroma of Munsell color\n\t * @return {number[]} PCCS color\n\t */\n\tstatic toPCCS(hvc: Triplet): Triplet {\n\t\treturn PCCS.fromMunsell(hvc);\n\t}\n\n\t/**\n\t * Convert PCCS (hls) to Munsell (HVC).\n\t * @param {number[]} hls Hue, lightness, saturation of PCCS color\n\t * @return {number[]} Munsell color\n\t */\n\tstatic fromPCCS(hls: Triplet): Triplet {\n\t\treturn PCCS.toMunsell(hls);\n\t}\n\n\t// Obtain the hue and chroma for the chromaticity coordinates (h, c) on the surface of the given lightness index.\n\t// Return false if it is out of the range of the table.\n\tprivate static _interpolateXY(h: number, c: number, vi: number): [number, number, boolean] {\n\t\tconst h10 = h * 10;\n\t\tlet h10_l = 0 | Math.floor(h10 / 25) * 25, h10_u = h10_l + 25;\n\t\tconst c_l = 0 | Math.floor(c / 2) * 2, c_u = c_l + 2;\n\n\t\tconst rh = (h10 - h10_l) / (h10_u - h10_l);\n\t\tconst rc = (c - c_l) / (c_u - c_l);\n\n\t\tif (h10_u == 1000) h10_u = 0;\n\t\tconst maxC_hl = Munsell._TBL_MAX_C[vi][h10_l / 25], maxC_hu = Munsell._TBL_MAX_C[vi][h10_u / 25];\n\n\t\tif (maxC_hl <= c_l || maxC_hu <= c_l) {\n\t\t\tlet xy_hl = [0, 0], xy_hu = [0, 0];\n\n\t\t\tif (c_l < maxC_hl) {\n\t\t\t\tconst a = Munsell._getXy(vi, h10_l, c_l), d = Munsell._getXy(vi, h10_l, c_u);\n\t\t\t\txy_hl[0] = (d[0] - a[0]) * rc + a[0]; xy_hl[1] = (d[1] - a[1]) * rc + a[1];\n\t\t\t} else {\n\t\t\t\txy_hl = Munsell._getXy(vi, h10_l, maxC_hl);\n\t\t\t}\n\t\t\tif (c_l < maxC_hu) {\n\t\t\t\tconst a = Munsell._getXy(vi, h10_u, c_l), d = Munsell._getXy(vi, h10_u, c_u);\n\t\t\t\txy_hu[0] = (d[0] - a[0]) * rc + a[0]; xy_hu[1] = (d[1] - a[1]) * rc + a[1];\n\t\t\t} else {\n\t\t\t\txy_hu = Munsell._getXy(vi, h10_u, maxC_hu);\n\t\t\t}\n\t\t\treturn [\n\t\t\t\t(xy_hu[0] - xy_hl[0]) * rh + xy_hl[0],\n\t\t\t\t(xy_hu[1] - xy_hl[1]) * rh + xy_hl[1],\n\t\t\t\tfalse\n\t\t\t];\n\t\t}\n\t\tif (c_l == 0) {\n\t\t\tconst o = Munsell._ILLUMINANT_C, d = Munsell._getXy(vi, h10_l, c_u), C = Munsell._getXy(vi, h10_u, c_u);\n\t\t\tconst cd_x = (C[0] - d[0]) * rh + d[0], cd_y = (C[1] - d[1]) * rh + d[1];\n\t\t\treturn [\n\t\t\t\t(cd_x - o[0]) * rc + o[0],\n\t\t\t\t(cd_y - o[1]) * rc + o[1],\n\t\t\t\ttrue\n\t\t\t];\n\t\t} else {\n\t\t\tconst a = Munsell._getXy(vi, h10_l, c_l), d = Munsell._getXy(vi, h10_l, c_u);\n\t\t\tconst b = Munsell._getXy(vi, h10_u, c_l), C = Munsell._getXy(vi, h10_u, c_u);\n\t\t\tconst ab_x = (b[0] - a[0]) * rh + a[0], ab_y = (b[1] - a[1]) * rh + a[1];\n\t\t\tconst cd_x = (C[0] - d[0]) * rh + d[0], cd_y = (C[1] - d[1]) * rh + d[1];\n\t\t\treturn [\n\t\t\t\t(cd_x - ab_x) * rc + ab_x,\n\t\t\t\t(cd_y - ab_y) * rc + ab_y,\n\t\t\t\ttrue\n\t\t\t];\n\t\t}\n\t}\n\n\t/**\n\t * Returns the string representation of Munsell numerical representation.\n\t * @param {number[]} hvc Hue, value, chroma of Munsell color\n\t * @return {string} String representation\n\t */\n\tstatic toString([h, v, c]: Triplet): string {\n\t\tconst str_v = Math.round(v * 10) / 10;\n\t\tif (c < Munsell.MONO_LIMIT_C) {\n\t\t\treturn `N ${str_v}`;\n\t\t} else {\n\t\t\tconst hue = Munsell.hueValueToHueName(h, c);\n\t\t\tconst str_c = Math.round(c * 10) / 10;\n\t\t\treturn `${hue} ${str_v}/${str_c}`;\n\t\t}\n\t}\n\n\tstatic MONO_LIMIT_C = 0.05;\n\tstatic _TBL_SRC_MIN = _TBL_SRC_MIN;\n\tstatic _TBL_V_REAL = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\tstatic _TBL_V_ALL = [0.2, 0.4, 0.6, 0.8, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\tstatic _TBL_V = Munsell._TBL_V_REAL;\n\tstatic _MIN_HUE = 0;\n\tstatic _MAX_HUE = 100;  // Same as MIN_HUE\n\tstatic _HUE_NAMES = ['R', 'YR', 'Y', 'GY', 'G', 'BG', 'B', 'PB', 'P', 'RP'];  // 1R = 1, 9RP = 99, 10RP = 0\n\tstatic _EP = 0.0000000000001;\n\tstatic _ILLUMINANT_C = [0.3101, 0.3162];  // Standard illuminant C, white point\n\tstatic _TBL_MAX_C = new Array(Munsell._TBL_V.length);\n\tstatic _TBL = new Array(Munsell._TBL_V.length);  // [vi][10 * h / 25][c / 2] -> [x, y]\n}\n\nfunction _initTable() {\n\tfor (let vi = 0; vi < Munsell._TBL_V.length; vi += 1) {\n\t\tMunsell._TBL_MAX_C[vi] = new Array(1000 / 25);\n\t\tMunsell._TBL_MAX_C[vi].fill(0);\n\t\tMunsell._TBL[vi] = new Array(1000 / 25);\n\t\tfor (let i = 0, n = 1000 / 25; i < n; i += 1) Munsell._TBL[vi][i] = new Array(50 / 2 + 2);  // 2 <= C <= 51\n\n\t\tfor (const cs of Munsell._TBL_SRC_MIN[vi]) {\n\t\t\tconst c0 = cs.shift() as number;\n\t\t\t_integrate(cs);\n\t\t\t_integrate(cs);\n\t\t\tfor (let i = 0; i < cs.length; i += 2) {\n\t\t\t\tconst c1 = i / 2 + 1;\n\t\t\t\tconst c2 = cs[i + 0] / 1000;\n\t\t\t\tconst c3 = cs[i + 1] / 1000;\n\t\t\t\tMunsell._TBL[vi][c0][c1] = [c2, c3];\n\t\t\t\tif (Munsell._TBL_MAX_C[vi][c0] < c1 * 2) {\n\t\t\t\t\tMunsell._TBL_MAX_C[vi][c0] = c1 * 2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfunction _integrate(cs: number[]) {\n\t\tlet c2_ = 0, c3_ = 0;\n\t\tfor (let i = 0; i < cs.length; i += 2) {\n\t\t\tconst c2 = cs[i], c3 = cs[i + 1];\n\t\t\tcs[i]     = c2 + c2_;\n\t\t\tcs[i + 1] = c3 + c3_;\n\t\t\tc2_ += c2;\n\t\t\tc3_ += c3;\n\t\t}\n\t}\n}\n\n_initTable();\n", "/**\n * This class converts the CIE 1931 XYZ color system.\n *\n * @author Takuto Yanagida\n * @version 2024-07-25\n */\n\nimport { Triplet } from './_triplet';\nimport { LRGB } from './_cs-lrgb';\nimport { Yxy } from './_cs-yxy';\nimport { Lab } from './_cs-lab';\nimport { LMS } from './_cs-lms';\nimport { Munsell } from './_cs-munsell';\n\nexport class XYZ {\n\n\n\t// Inverse Conversion Functions --------------------------------------------\n\n\n\t/**\n\t * Convert CIE 1931 XYZ to Linear RGB.\n\t * @param {number[]} xyz XYZ color\n\t * @return Linear RGB color\n\t */\n\tstatic toLRGB(xyz: Triplet): Triplet {\n\t\treturn LRGB.fromXYZ(xyz);\n\t}\n\n\t/**\n\t * Convert Linear RGB to CIE 1931 XYZ.\n\t * @param {number[]} lrgb Linear RGB color\n\t * @return {number[]} XYZ color\n\t */\n\tstatic fromLRGB(lrgb: Triplet): Triplet {\n\t\treturn LRGB.toXYZ(lrgb);\n\t}\n\n\t/**\n\t * Convert CIE 1931 XYZ to Yxy.\n\t * @param {number[]} xyz XYZ color\n\t * @return {number[]} Yxy color\n\t */\n\tstatic toYxy(xyz: Triplet): Triplet {\n\t\treturn Yxy.fromXYZ(xyz);\n\t}\n\n\t/**\n\t * Convert Yxy to CIE 1931 XYZ.\n\t * @param {number[]} yxy Yxy color\n\t * @return {number[]} XYZ color\n\t */\n\tstatic fromYxy(yxy: Triplet): Triplet {\n\t\treturn Yxy.toXYZ(yxy);\n\t}\n\n\t/**\n\t * Convert CIE 1931 XYZ to CIE 1976 (L*, a*, b*).\n\t * @param {number[]} xyz XYZ color\n\t * @return {number[]} CIELAB color\n\t */\n\tstatic toLab(xyz: Triplet): Triplet {\n\t\treturn Lab.fromXYZ(xyz);\n\t}\n\n\t/**\n\t * Convert CIE 1976 (L*, a*, b*) to CIE 1931 XYZ.\n\t * @param {number[]} lab L*, a*, b* of CIELAB color\n\t * @return {number[]} XYZ color\n\t */\n\tstatic fromLab(lab: Triplet): Triplet {\n\t\treturn Lab.toXYZ(lab);\n\t}\n\n\t/**\n\t * Convert CIE 1931 XYZ to LMS.\n\t * @param {number[]} xyz XYZ color\n\t * @return {number[]} LMS color\n\t */\n\tstatic toLMS(xyz: Triplet): Triplet {\n\t\treturn LMS.fromXYZ(xyz);\n\t}\n\n\t/**\n\t * Convert LMS to CIE 1931 XYZ.\n\t * @param {number[]} lms LMS color\n\t * @return {number[]} XYZ color\n\t */\n\tstatic fromLMS(lms: Triplet): Triplet {\n\t\treturn LMS.toXYZ(lms);\n\t}\n\n\t/**\n\t * Convert CIE 1931 XYZ to Munsell (HVC).\n\t * @param {number[]} xyz XYZ color (standard illuminant D65)\n\t * @return {number[]} Munsell color\n\t */\n\tstatic toMunsell(xyz: Triplet): Triplet {\n\t\treturn Munsell.fromXYZ(xyz);\n\t}\n\n\t/**\n\t * Convert Munsell (HVC) to CIE 1931 XYZ.\n\t * @param {number[]} hvc Hue, value, chroma of Munsell color\n\t * @return {number[]} XYZ color\n\t */\n\tstatic fromMunsell(hvc: Triplet): Triplet {\n\t\treturn Munsell.toXYZ(hvc);\n\t}\n\n\n\t// Conversion of Standard Illuminant ---------------------------------------\n\n\n\t/**\n\t * Convert CIE 1931 XYZ of standard illuminant C to CIE 1931 XYZ of standard illuminant D65.\n\t * Reference: http://www.brucelindbloom.com/index.html?MunsellCalculator.html (Von Kries method)\n\t * @param {number[]} xyz XYZ color (standard illuminant C)\n\t * @return {number[]} XYZ of standard illuminant D65\n\t */\n\tstatic fromIlluminantC([x, y, z]: Triplet): Triplet {\n\t\treturn [\n\t\t\t 0.9972812 * x + -0.0093756 * y + -0.0154171 * z,\n\t\t\t-0.0010298 * x +  1.0007636 * y +  0.0002084 * z,\n\t\t\t                                   0.9209267 * z,\n\t\t];\n\t}\n\n\t/**\n\t * Convert CIE 1931 XYZ of standard illuminant D65 to CIE 1931 XYZ of standard illuminant C.\n\t * Reference: http://www.brucelindbloom.com/index.html?MunsellCalculator.html (Von Kries method)\n\t * @param {number[]} xyz XYZ color (standard illuminant D65)\n\t * @return {number[]} XYZ of standard illuminant C\n\t */\n\tstatic toIlluminantC([x, y, z]: Triplet): Triplet {\n\t\treturn [\n\t\t\t1.0027359 * x +  0.0093941 * y +  0.0167846 * z,\n\t\t\t0.0010319 * x +  0.9992466 * y + -0.0002089 * z,\n\t\t\t                                  1.0858628 * z,\n\t\t];\n\t}\n}\n", "/**\n * This class converts the sRGB color system.\n * Reference: http://www.w3.org/Graphics/Color/sRGB.html\n *\n * @author Takuto Yanagida\n * @version 2024-07-25\n */\n\nimport { Triplet } from './_triplet';\nimport { Lab } from './_cs-lab';\nimport { XYZ } from './_cs-xyz';\nimport { LRGB } from './_cs-lrgb';\nimport { Yxy } from './_cs-yxy';\n\nexport class RGB {\n\tstatic isSaturated = false;\n\n\tprivate static _checkRange(vs: Triplet, min: number, max: number): boolean {\n\t\tlet isSaturated = false;\n\t\tif (vs[0] > max) { vs[0] = max; isSaturated = true; }\n\t\tif (vs[0] < min) { vs[0] = min; isSaturated = true; }\n\t\tif (vs[1] > max) { vs[1] = max; isSaturated = true; }\n\t\tif (vs[1] < min) { vs[1] = min; isSaturated = true; }\n\t\tif (vs[2] > max) { vs[2] = max; isSaturated = true; }\n\t\tif (vs[2] < min) { vs[2] = min; isSaturated = true; }\n\t\treturn isSaturated;\n\t}\n\n\t// Convert sRGB to Linear RGB (gamma correction).\n\tprivate static _func(x: number): number {\n\t\treturn (x < 0.03928) ? (x / 12.92) : Math.pow((x + 0.055) / 1.055, 2.4);\n\t}\n\n\t// Convert Linear RGB to sRGB (inverse gamma correction).\n\tprivate static _invFunc(x: number): number {\n\t\tx = (x > 0.00304) ? (Math.pow(x, 1 / 2.4) * 1.055 - 0.055) : (x * 12.92);\n\t\treturn x;\n\t}\n\n\t/**\n\t * Convert sRGB (Gamma 2.2) to Linear RGB.\n\t * @param {number[]} rgb sRGB color\n\t * @return {number[]} Linear RGB color\n\t */\n\tstatic toLRGB([r, g, b]: Triplet): Triplet {\n\t\treturn [\n\t\t\tRGB._func(r / 255),\n\t\t\tRGB._func(g / 255),\n\t\t\tRGB._func(b / 255),\n\t\t];\n\t}\n\n\t/**\n\t * Convert Linear RGB to sRGB (Gamma 2.2).\n\t * @param {number[]} lrgb Linear RGB color\n\t * @return {number[]} sRGB color\n\t */\n\tstatic fromLRGB([lr, lg, lb]: Triplet): Triplet {\n\t\tconst dest: Triplet = [\n\t\t\tRGB._invFunc(lr) * 255 | 0,\n\t\t\tRGB._invFunc(lg) * 255 | 0,\n\t\t\tRGB._invFunc(lb) * 255 | 0,\n\t\t];\n\t\tRGB.isSaturated = RGB._checkRange(dest, 0, 255);\n\t\treturn dest;\n\t}\n\n\n\t// Utilities ---------------------------------------------------------------\n\n\n\t/**\n\t * Convert color integer to sRGB.\n\t * @param {number} v Color integer\n\t * @return {number[]} Color vector\n\t */\n\tstatic fromColorInteger(v: number): Triplet {\n\t\treturn [\n\t\t\t(v >> 16) & 0xFF,\n\t\t\t(v >>  8) & 0xFF,\n\t\t\t(v      ) & 0xFF,\n\t\t];\n\t}\n\n\t/**\n\t * Convert sRGB to color integer.\n\t * @param {number[]} rgb RGB\n\t * @return {number} Color integer\n\t */\n\tstatic toColorInteger([r, g, b]: Triplet): number {\n\t\treturn (r << 16) | (g << 8) | b | 0xff000000;\n\t}\n\n\n\t// Inverse Conversion Functions --------------------------------------------\n\n\n\t/**\n\t * Convert sRGB (Gamma 2.2) to CIELAB (L*a*b*).\n\t * @param {number[]} rgb sRGB color\n\t * @return {number[]} CIELAB color\n\t */\n\tstatic toLab(rgb: Triplet): Triplet {\n\t\treturn Lab.fromXYZ(XYZ.fromLRGB(LRGB.fromRGB(rgb)));\n\t}\n\n\t/**\n\t * Convert CIELAB (L*a*b*) to sRGB (Gamma 2.2).\n\t * @param {number[]} lab L*, a*, b* of CIELAB color\n\t * @return {number[]} sRGB color\n\t */\n\tstatic fromLab(lab: Triplet): Triplet {\n\t\treturn RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromLab(lab)));\n\t}\n\n\t/**\n\t * Convert sRGB to CIE 1931 XYZ.\n\t * @param {number[]} rgb sRGB color\n\t * @return {number[]} XYZ color\n\t */\n\tstatic toXYZ(rgb: Triplet): Triplet {\n\t\treturn LRGB.toXYZ(LRGB.fromRGB(rgb));\n\t}\n\n\t/**\n\t * Convert CIE 1931 XYZ to sRGB.\n\t * @param {number[]} xyz XYZ color\n\t * @return {number[]} sRGB color\n\t */\n\tstatic fromXYZ(xyz: Triplet): Triplet {\n\t\treturn RGB.fromLRGB(LRGB.fromXYZ(xyz));\n\t}\n\n\t/**\n\t * Convert sRGB (Gamma 2.2) to Yxy.\n\t * @param {number[]} rgb sRGB color\n\t * @return {number[]} Yxy color\n\t */\n\tstatic toYxy(rgb: Triplet): Triplet {\n\t\treturn Yxy.fromXYZ(XYZ.fromLRGB(LRGB.fromRGB(rgb)));\n\t}\n\n\t/**\n\t * Convert Yxy to sRGB (Gamma 2.2).\n\t * @param {number[]} yxy Yxy color\n\t * @return {number[]} sRGB color\n\t */\n\tstatic fromYxy(yxy: Triplet): Triplet {\n\t\treturn RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromYxy(yxy)));\n\t}\n\n\n\t// Color Vision Characteristics Conversion ---------------------------------\n\n\n\t/**\n\t * Convert sRGB to Lightness-only sRGB.\n\t * @param {number[]} rgb sRGB color\n\t * @return {number[]} Lightness-only sRGB color\n\t */\n\tstatic toLightness(rgb: Triplet): Triplet {\n\t\tconst l = Lab.lightnessFromXYZ(XYZ.fromLRGB(LRGB.fromRGB(rgb)));\n\t\treturn RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromLab([l, 0, 0])));\n\t}\n}\n", "/**\n * This class simulates color vision characteristics.\n *\n * @author Takuto Yanagida\n * @version 2024-07-26\n */\n\nimport { Triplet } from './_triplet';\nimport { LMS } from './_cs-lms';\nimport { XYZ } from './_cs-xyz';\n\nexport class ColorVisionSimulation {\n\t/*\n\t * Reference: Brettel, H.; Vi\u00E9not, F. & Mollon, J. D.,\n\t * Computerized simulation of color appearance for dichromats,\n\t * Journal of the Optical Society of America A, 1997, 14, 2647-2655.\n\t */\n\n\t/**\n\t * Simulate protanopia\n\t * @param {number[]} lms LMS color\n\t * @return {number[]} LMS color in protanopia\n\t */\n\tstatic brettelP([l, m, s]: Triplet): Triplet {\n\t\treturn [\n\t\t\t0.0 * l + 2.02344 * m + -2.52581 * s,\n\t\t\t0.0 * l + 1.0     * m +  0.0     * s,\n\t\t\t0.0 * l + 0.0     * m +  1.0     * s,\n\t\t];\n\t}\n\n\t/**\n\t * Simulate deuteranopia\n\t * @param {number[]} lms LMS color\n\t * @return {number[]} LMS color in deuteranopia\n\t */\n\tstatic brettelD([l, m, s]: Triplet): Triplet {\n\t\treturn [\n\t\t\t1.0      * l + 0.0 * m + 0.0     * s,\n\t\t\t0.494207 * l + 0.0 * m + 1.24827 * s,\n\t\t\t0.0      * l + 0.0 * m + 1.0     * s,\n\t\t];\n\t}\n\n\t/*\n\t * Reference: Katsunori Okajima, Syuu Kanbe,\n\t * A Real-time Color Simulation of Dichromats,\n\t * IEICE technical report 107(117), 107-110, 2007-06-21.\n\t */\n\n\t/**\n\t * Correct simulation of protanopia\n\t * @param {number} m Original M of LMS color\n\t * @param {number[]} lms LMS color of protanopia simulation\n\t * @param {number[]} base Base LMS color\n\t * @return {number[]} LMS color in protanopia\n\t */\n\tstatic okajimaCorrectionP(m: number, [l2, m2, s2]: Triplet, base: Triplet): Triplet {\n\t\tconst sp1 = m / base[1];\n\t\tconst dp0 = l2 / base[0];\n\t\tconst dp1 = m2 / base[1];\n\t\tconst dp2 = s2 / base[2];\n\t\tconst k = ColorVisionSimulation.BETA * sp1 / (ColorVisionSimulation.ALPHA * dp0 + ColorVisionSimulation.BETA * dp1);\n\t\treturn [\n\t\t\t(k * dp0) * base[0],\n\t\t\t(k * dp1) * base[1],\n\t\t\t(k * dp2) * base[2]\n\t\t];\n\t}\n\n\t/**\n\t * Correct simulation of deuteranopia\n\t * @param {number} l Original L of LMS color\n\t * @param {number[]} lms LMS color of deuteranopia simulation\n\t * @param {number[]} base Base LMS color\n\t * @return {number[]} LMS color in deuteranopia\n\t */\n\tstatic okajimaCorrectionD(l: number, [l2, m2, s2]: Triplet, base: Triplet): Triplet {\n\t\tconst sp0 = l / base[0];\n\t\tconst dp0 = l2 / base[0];\n\t\tconst dp1 = m2 / base[1];\n\t\tconst dp2 = s2 / base[2];\n\t\tconst k = ColorVisionSimulation.ALPHA * sp0 / (ColorVisionSimulation.ALPHA * dp0 + ColorVisionSimulation.BETA * dp1);\n\t\treturn [\n\t\t\t(k * dp0) * base[0],\n\t\t\t(k * dp1) * base[1],\n\t\t\t(k * dp2) * base[2]\n\t\t];\n\t}\n\n\n\t// -------------------------------------------------------------------------\n\n\n\t/**\n\t * Convert LMS to LMS in protanopia (Method 1).\n\t * @param {number[]} lms LMS color\n\t * @param {boolean} doCorrection\n\t * @return {number[]} LMS color in protanopia\n\t */\n\tstatic lmsToProtanopia(lms: Triplet, doCorrection: boolean = false): Triplet {\n\t\tconst ds = ColorVisionSimulation.brettelP(lms);\n\t\tif (doCorrection) {\n\t\t\treturn ColorVisionSimulation.okajimaCorrectionP(lms[1], ds, ColorVisionSimulation.LMS_BASE);\n\t\t}\n\t\treturn ds;\n\t}\n\n\t/**\n\t * Convert LMS to LMS in deuteranopia (Method 1).\n\t * @param {number[]} lms LMS color\n\t * @param {boolean} doCorrection\n\t * @return {number[]} LMS color in deuteranopia\n\t */\n\tstatic lmsToDeuteranopia(lms: Triplet, doCorrection: boolean = false): Triplet {\n\t\tconst ds = ColorVisionSimulation.brettelD(lms);\n\t\tif (doCorrection) {\n\t\t\treturn ColorVisionSimulation.okajimaCorrectionD(lms[0], ds, ColorVisionSimulation.LMS_BASE);\n\t\t}\n\t\treturn ds;\n\t}\n\n\n\t// -------------------------------------------------------------------------\n\n\n\t/**\n\t * Convert Linear RGB to LMS in protanopia (Method 2).\n\t * @param {number[]} lrgb Linear RGB color\n\t * @param {boolean} doCorrection\n\t * @return {number[]} LMS color in protanopia\n\t */\n\tstatic lrgbToProtanopia([lr, lg, lb]: Triplet, doCorrection: boolean = false): Triplet {\n\t\tconst lrgb2: Triplet = [\n\t\t\t0.992052 * lr + 0.003974,\n\t\t\t0.992052 * lg + 0.003974,\n\t\t\t0.992052 * lb + 0.003974,\n\t\t];\n\t\tconst lms = LMS.fromXYZ(XYZ.fromLRGB(lrgb2));\n\t\tconst ds = ColorVisionSimulation.brettelP(lms);\n\n\t\tif (doCorrection) {\n\t\t\treturn ColorVisionSimulation.okajimaCorrectionP(lms[1], ds, ColorVisionSimulation.LMS_BASE2);\n\t\t}\n\t\treturn ds;\n\t}\n\n\t/**\n\t * Convert Linear RGB to LMS in deuteranopia (Method 2).\n\t * @param {number[]} lrgb Linear RGB color\n\t * @param {boolean} doCorrection\n\t * @return {number[]} LMS color in deuteranopia\n\t */\n\tstatic lrgbToDeuteranopia([lr, lg, lb]: Triplet, doCorrection: boolean = false): Triplet {\n\t\tconst lrgb2: Triplet = [\n\t\t\t0.957237 * lr + 0.0213814,\n\t\t\t0.957237 * lg + 0.0213814,\n\t\t\t0.957237 * lb + 0.0213814,\n\t\t];\n\t\tconst lms = LMS.fromXYZ(XYZ.fromLRGB(lrgb2));\n\t\tconst ds = ColorVisionSimulation.brettelD(lms);\n\n\t\tif (doCorrection) {\n\t\t\treturn ColorVisionSimulation.okajimaCorrectionD(lms[0], ds, ColorVisionSimulation.LMS_BASE2);\n\t\t}\n\t\treturn ds;\n\t}\n\n\tstatic LMS_BASE  = LMS.fromXYZ([1, 1, 1]);\n\tstatic LMS_BASE2 = LMS.fromXYZ(XYZ.fromLRGB([1, 1, 1]));\n\n\tstatic ALPHA = 1;\n\tstatic BETA  = 1;\n}\n", "/**\n * Color\n *\n * @author Takuto Yanagida\n * @version 2024-07-26\n */\n\nimport { Triplet } from './_triplet';\nimport { RGB } from './_cs-rgb';\nimport { Lab } from './_cs-lab';\nimport { Yxy } from './_cs-yxy';\nimport { LMS } from './_cs-lms';\nimport { LRGB } from './_cs-lrgb';\nimport { Munsell } from './_cs-munsell';\nimport { PCCS } from './_cs-pccs';\nimport { Evaluation } from './_eval';\nimport { ColorVisionSimulation } from './_sim-color-vision';\n\nexport enum ColorSpace {\n\tRGB,\n\tLRGB,\n\tXYZ,\n\tYxy,\n\tLab,\n\tLCh,\n\tLMS,\n\tMunsell,\n\tPCCS,\n\tTone,\n}\n\nexport class Color {\n\tprivate ts = new Map<ColorSpace, Triplet>();\n\tprivate us = new Map<string, string>();\n\tprivate cs: ColorSpace | null = null;\n\n\tpublic constructor(cs: ColorSpace|null = null, t: Triplet|null = null) {\n\t\tif (cs && t) {\n\t\t\tthis.set(cs, t);\n\t\t}\n\t}\n\n\tpublic set(cs: ColorSpace, t: Triplet): void {\n\t\tthis.ts.clear();\n\t\tthis.ts.set(cs, t);\n\t\tthis.cs = cs;\n\t}\n\n\tpublic as(cs: ColorSpace): Triplet {\n\t\tswitch (cs) {\n\t\t\tcase ColorSpace.RGB    : return this.asRGB();\n\t\t\tcase ColorSpace.LRGB   : return this.asLRGB();\n\t\t\tcase ColorSpace.XYZ    : return this.asXYZ();\n\t\t\tcase ColorSpace.Yxy    : return this.asYxy();\n\t\t\tcase ColorSpace.Lab    : return this.asLab();\n\t\t\tcase ColorSpace.LCh    : return this.asLCh();\n\t\t\tcase ColorSpace.LMS    : return this.asLMS();\n\t\t\tcase ColorSpace.Munsell: return this.asMunsell();\n\t\t\tcase ColorSpace.PCCS   : return this.asPCCS();\n\t\t\tcase ColorSpace.Tone   : return this.asTone();\n\t\t}\n\t}\n\n\n\t// -------------------------------------------------------------------------\n\n\n\tpublic asRGB(): Triplet {\n\t\tif (this.ts.has(ColorSpace.RGB)) {\n\t\t\treturn this.ts.get(ColorSpace.RGB) as Triplet;\n\t\t}\n\t\tconst t: Triplet = RGB.fromLRGB(this.asLRGB());\n\t\tthis.ts.set(ColorSpace.RGB, t);\n\t\tif (RGB.isSaturated) this.us.set('rgb_sat', '');\n\t\treturn t;\n\t}\n\n\tpublic asLRGB(): Triplet {\n\t\tif (this.ts.has(ColorSpace.LRGB)) {\n\t\t\treturn this.ts.get(ColorSpace.LRGB) as Triplet;\n\t\t}\n\t\tlet t: Triplet = [0, 0, 0];\n\t\tswitch (this.cs) {\n\t\t\tcase ColorSpace.RGB:\n\t\t\t\tt = RGB.toLRGB(this.asRGB());\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tt = LRGB.fromXYZ(this.asXYZ());\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.ts.set(ColorSpace.LRGB, t);\n\t\treturn t;\n\t}\n\n\tpublic asXYZ(): Triplet {\n\t\tif (this.ts.has(ColorSpace.XYZ)) {\n\t\t\treturn this.ts.get(ColorSpace.XYZ) as Triplet;\n\t\t}\n\t\tlet t: Triplet = [0, 0, 0];\n\t\tswitch (this.cs) {\n\t\t\tcase ColorSpace.RGB:\n\t\t\tcase ColorSpace.LRGB:\n\t\t\t\tt = LRGB.toXYZ(this.asLRGB());\n\t\t\t\tbreak;\n\t\t\tcase ColorSpace.LCh:\n\t\t\tcase ColorSpace.Lab:\n\t\t\t\tt = Lab.toXYZ(this.asLab());\n\t\t\t\tbreak;\n\t\t\tcase ColorSpace.Yxy:\n\t\t\t\tt = Yxy.toXYZ(this.asYxy());\n\t\t\t\tif (Yxy.isSaturated) this.us.set('yxy_sat', '');\n\t\t\t\tbreak;\n\t\t\tcase ColorSpace.LMS:\n\t\t\t\tt = LMS.toXYZ(this.asLMS());\n\t\t\t\tbreak;\n\t\t\tcase ColorSpace.Munsell:\n\t\t\tcase ColorSpace.PCCS:\n\t\t\tcase ColorSpace.Tone:\n\t\t\t\tt = Munsell.toXYZ(this.asMunsell());\n\t\t\t\tif (Munsell.isSaturated) this.us.set('mun_sat', '');\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.ts.set(ColorSpace.XYZ, t);\n\t\treturn t;\n\t}\n\n\tpublic asYxy(): Triplet {\n\t\tif (this.ts.has(ColorSpace.Yxy)) {\n\t\t\treturn this.ts.get(ColorSpace.Yxy) as Triplet;\n\t\t}\n\t\tconst t: Triplet = Yxy.fromXYZ(this.asXYZ());\n\t\tthis.ts.set(ColorSpace.Yxy, t);\n\t\treturn t;\n\t}\n\n\tpublic asLab(): Triplet {\n\t\tif (this.ts.has(ColorSpace.Lab)) {\n\t\t\treturn this.ts.get(ColorSpace.Lab) as Triplet;\n\t\t}\n\t\tlet t: Triplet = [0, 0, 0];\n\t\tswitch (this.cs) {\n\t\t\tcase ColorSpace.LCh:\n\t\t\t\tt = Lab.toOrthogonalCoordinate(this.asLCh());\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tt = Lab.fromXYZ(this.asXYZ());\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.ts.set(ColorSpace.Lab, t);\n\t\treturn t;\n\t}\n\n\tpublic asLCh(): Triplet {\n\t\tif (this.ts.has(ColorSpace.LCh)) {\n\t\t\treturn this.ts.get(ColorSpace.LCh) as Triplet;\n\t\t}\n\t\tconst t: Triplet = Lab.toPolarCoordinate(this.asLab());\n\t\tthis.ts.set(ColorSpace.LCh, t);\n\t\treturn t;\n\t}\n\n\tpublic asLMS(): Triplet {\n\t\tif (this.ts.has(ColorSpace.LMS)) {\n\t\t\treturn this.ts.get(ColorSpace.LMS) as Triplet;\n\t\t}\n\t\tconst t: Triplet = LMS.fromXYZ(this.asXYZ());\n\t\tthis.ts.set(ColorSpace.LMS, t);\n\t\treturn t;\n\t}\n\n\tpublic asMunsell(): Triplet {\n\t\tif (this.ts.has(ColorSpace.Munsell)) {\n\t\t\treturn this.ts.get(ColorSpace.Munsell) as Triplet;\n\t\t}\n\t\tlet t: Triplet = [0, 0, 0];\n\t\tswitch (this.cs) {\n\t\t\tcase ColorSpace.PCCS:\n\t\t\tcase ColorSpace.Tone:\n\t\t\t\tt = PCCS.toMunsell(this.asPCCS());\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tt = Munsell.fromXYZ(this.asXYZ());\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.ts.set(ColorSpace.Munsell, t);\n\t\treturn t;\n\t}\n\n\tpublic asPCCS(): Triplet {\n\t\tif (this.ts.has(ColorSpace.PCCS)) {\n\t\t\treturn this.ts.get(ColorSpace.PCCS) as Triplet;\n\t\t}\n\t\tlet t: Triplet = [0, 0, 0];\n\t\tswitch (this.cs) {\n\t\t\tcase ColorSpace.Tone:\n\t\t\t\tt = PCCS.toNormalCoordinate(this.asTone());\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tt = PCCS.fromMunsell(this.asMunsell());\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.ts.set(ColorSpace.PCCS, t);\n\t\treturn t;\n\t}\n\n\tpublic asTone(): Triplet {\n\t\tif (this.ts.has(ColorSpace.Tone)) {\n\t\t\treturn this.ts.get(ColorSpace.Tone) as Triplet;\n\t\t}\n\t\tconst t: Triplet = PCCS.toToneCoordinate(this.asPCCS());\n\t\tthis.ts.set(ColorSpace.Tone, t);\n\t\treturn t;\n\t}\n\n\n\t// -------------------------------------------------------------------------\n\n\n\tpublic isRGBSaturated(): boolean {\n\t\treturn this.us.has('rgb_sat');\n\t}\n\n\tpublic isYxySaturated(): boolean {\n\t\treturn this.us.has('yxy_sat');\n\t}\n\n\tpublic isMunsellSaturated(): boolean {\n\t\treturn this.us.has('mun_sat');\n\t}\n\n\n\t// -------------------------------------------------------------------------\n\n\n\tpublic asMunsellNotation(): string {\n\t\tif (this.us.has('mun_not')) {\n\t\t\treturn this.us.get('mun_not') as string;\n\t\t}\n\t\tconst s = Munsell.toString(this.asMunsell());\n\t\tthis.us.set('mun_not', s);\n\t\treturn s;\n\t}\n\n\tpublic asPCCSNotation(): string {\n\t\tif (this.us.has('pccs_not')) {\n\t\t\treturn this.us.get('pccs_not') as string;\n\t\t}\n\t\tconst s = PCCS.toString(this.asPCCS());\n\t\tthis.us.set('pccs_not', s);\n\t\treturn s;\n\t}\n\n\tpublic asCategory(): string {\n\t\tif (this.us.has('cat')) {\n\t\t\treturn this.us.get('cat') as string;\n\t\t}\n\t\tconst s = Evaluation.categoryOfYxy(this.asYxy());\n\t\tthis.us.set('cat', s);\n\t\treturn s;\n\t}\n\n\n\t// -------------------------------------------------------------------------\n\n\n\tpublic toProtanopia(method: 1|2 = 2, doCorrection: boolean = false): Color {\n\t\tif (1 === method) {\n\t\t\tconst lms = ColorVisionSimulation.lmsToProtanopia(this.asLMS(), doCorrection);\n\t\t\treturn new Color(ColorSpace.LMS, lms);\n\t\t} else {\n\t\t\tconst lms = ColorVisionSimulation.lrgbToProtanopia(this.asLRGB(), doCorrection);\n\t\t\treturn new Color(ColorSpace.LMS, lms);\n\t\t}\n\t}\n\n\tpublic toDeuteranopia(method: 1|2 = 2, doCorrection: boolean = false): Color {\n\t\tif (1 === method) {\n\t\t\tconst lms = ColorVisionSimulation.lmsToDeuteranopia(this.asLMS(), doCorrection);\n\t\t\treturn new Color(ColorSpace.LMS, lms);\n\t\t} else {\n\t\t\tconst lms = ColorVisionSimulation.lrgbToDeuteranopia(this.asLRGB(), doCorrection);\n\t\t\treturn new Color(ColorSpace.LMS, lms);\n\t\t}\n\t}\n}\n", "/**\n * Functions for Color Space Conversion\n *\n * @author Takuto Yanagida\n * @version 2024-07-25\n */\n\nimport { Triplet } from './_triplet';\nimport { Lab } from './_cs-lab';\nimport { LMS } from './_cs-lms';\nimport { LRGB } from './_cs-lrgb';\nimport { RGB } from './_cs-rgb';\nimport { XYZ } from './_cs-xyz';\nimport { YIQ } from './_cs-yiq';\nimport { Yxy } from './_cs-yxy';\nimport { Munsell } from './_cs-munsell';\nimport { PCCS } from './_cs-pccs';\n\n/**\n * Convert a color from one color space to another.\n * @param {number[]} vs a color of the color space 'from'\n * @param {string} from a color space name\n * @param {string=} [to='rgb'] a color space name\n * @return {number[]} a color of the color space 'to'\n */\nexport function convert(vs: Triplet, from: string, to: string | undefined = 'rgb'): Triplet {\n\tconst type = from.toLowerCase() + '-' + to.toLowerCase();\n\tswitch (type) {\n\t\tcase 'yiq-rgb'     : return RGB.fromLRGB(LRGB.fromYIQ(vs));\n\t\tcase 'lrgb-rgb'    : return RGB.fromLRGB(vs);\n\t\tcase 'xyz-rgb'     : return RGB.fromLRGB(LRGB.fromXYZ(vs));\n\t\tcase 'yxy-rgb'     : return RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromYxy(vs)));\n\t\tcase 'lab-rgb'     : return RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromLab(vs)));\n\t\tcase 'lms-rgb'     : return RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromLMS(vs)));\n\t\tcase 'munsell-rgb' : return RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromMunsell(vs)));\n\t\tcase 'pccs-rgb'    : return RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromMunsell(Munsell.fromPCCS(vs))));\n\n\t\tcase 'rgb-lrgb'    : return LRGB.fromRGB(vs);\n\t\tcase 'yiq-lrgb'    : return LRGB.fromYIQ(vs);\n\t\tcase 'xyz-lrgb'    : return LRGB.fromXYZ(vs);\n\t\tcase 'yxy-lrgb'    : return LRGB.fromXYZ(XYZ.fromYxy(vs));\n\t\tcase 'lab-lrgb'    : return LRGB.fromXYZ(XYZ.fromLab(vs));\n\t\tcase 'lms-lrgb'    : return LRGB.fromXYZ(XYZ.fromLMS(vs));\n\t\tcase 'munsell-lrgb': return LRGB.fromXYZ(XYZ.fromMunsell(vs));\n\t\tcase 'pccs-lrgb'   : return LRGB.fromXYZ(XYZ.fromMunsell(Munsell.fromPCCS(vs)));\n\n\t\tcase 'rgb-yiq'     : return YIQ.fromLRGB(LRGB.fromRGB(vs));\n\t\tcase 'lrgb-yiq'    : return YIQ.fromLRGB(vs);\n\t\tcase 'xyz-yiq'     : return YIQ.fromLRGB(LRGB.fromXYZ(vs));\n\t\tcase 'yxy-yiq'     : return YIQ.fromLRGB(LRGB.fromXYZ(XYZ.fromYxy(vs)));\n\t\tcase 'lab-yiq'     : return YIQ.fromLRGB(LRGB.fromXYZ(XYZ.fromLab(vs)));\n\t\tcase 'lms-yiq'     : return YIQ.fromLRGB(LRGB.fromXYZ(XYZ.fromLMS(vs)));\n\t\tcase 'munsell-yiq' : return YIQ.fromLRGB(LRGB.fromXYZ(XYZ.fromMunsell(vs)));\n\t\tcase 'pccs-yiq'    : return YIQ.fromLRGB(LRGB.fromXYZ(XYZ.fromMunsell(Munsell.fromPCCS(vs))));\n\n\t\tcase 'rgb-xyz'     : return XYZ.fromLRGB(LRGB.fromRGB(vs));\n\t\tcase 'yiq-xyz'     : return XYZ.fromLRGB(LRGB.fromYIQ(vs));\n\t\tcase 'lrgb-xyz'    : return XYZ.fromLRGB(vs);\n\t\tcase 'yxy-xyz'     : return XYZ.fromYxy(vs);\n\t\tcase 'lab-xyz'     : return XYZ.fromLab(vs);\n\t\tcase 'lms-xyz'     : return XYZ.fromLMS(vs);\n\t\tcase 'munsell-xyz' : return XYZ.fromMunsell(vs);\n\t\tcase 'pccs-xyz'    : return XYZ.fromMunsell(Munsell.fromPCCS(vs));\n\n\t\tcase 'rgb-yxy'     : return Yxy.fromXYZ(XYZ.fromLRGB(LRGB.fromRGB(vs)));\n\t\tcase 'yiq-yxy'     : return Yxy.fromXYZ(XYZ.fromLRGB(LRGB.fromYIQ(vs)));\n\t\tcase 'lrgb-yxy'    : return Yxy.fromXYZ(XYZ.fromLRGB(vs));\n\t\tcase 'xyz-yxy'     : return Yxy.fromXYZ(vs);\n\t\tcase 'lab-yxy'     : return Yxy.fromXYZ(XYZ.fromLab(vs));\n\t\tcase 'lms-yxy'     : return Yxy.fromXYZ(XYZ.fromLMS(vs));\n\t\tcase 'munsell-yxy' : return Yxy.fromXYZ(XYZ.fromMunsell(vs));\n\t\tcase 'pccs-yxy'    : return Yxy.fromXYZ(XYZ.fromMunsell(Munsell.fromPCCS(vs)));\n\n\t\tcase 'rgb-lab'     : return Lab.fromXYZ(XYZ.fromLRGB(LRGB.fromRGB(vs)));\n\t\tcase 'yiq-lab'     : return Lab.fromXYZ(XYZ.fromLRGB(LRGB.fromYIQ(vs)));\n\t\tcase 'lrgb-lab'    : return Lab.fromXYZ(XYZ.fromLRGB(vs));\n\t\tcase 'xyz-lab'     : return Lab.fromXYZ(vs);\n\t\tcase 'yxy-lab'     : return Lab.fromXYZ(XYZ.fromYxy(vs));\n\t\tcase 'lms-lab'     : return Lab.fromXYZ(XYZ.fromLMS(vs));\n\t\tcase 'munsell-lab' : return Lab.fromXYZ(XYZ.fromMunsell(vs));\n\t\tcase 'pccs-lab'    : return Lab.fromXYZ(XYZ.fromMunsell(Munsell.fromPCCS(vs)));\n\n\t\tcase 'rgb-lms'     : return LMS.fromXYZ(XYZ.fromLRGB(LRGB.fromRGB(vs)));\n\t\tcase 'yiq-lms'     : return LMS.fromXYZ(XYZ.fromLRGB(LRGB.fromYIQ(vs)));\n\t\tcase 'lrgb-lms'    : return LMS.fromXYZ(XYZ.fromLRGB(vs));\n\t\tcase 'xyz-lms'     : return LMS.fromXYZ(vs);\n\t\tcase 'yxy-lms'     : return LMS.fromXYZ(XYZ.fromYxy(vs));\n\t\tcase 'lab-lms'     : return LMS.fromXYZ(XYZ.fromLab(vs));\n\t\tcase 'munsell-lms' : return LMS.fromXYZ(XYZ.fromMunsell(vs));\n\t\tcase 'pccs-lms'    : return LMS.fromXYZ(XYZ.fromMunsell(Munsell.fromPCCS(vs)));\n\n\t\tcase 'rgb-munsell' : return Munsell.fromXYZ(XYZ.fromLRGB(LRGB.fromRGB(vs)));\n\t\tcase 'yiq-munsell' : return Munsell.fromXYZ(XYZ.fromLRGB(LRGB.fromYIQ(vs)));\n\t\tcase 'lrgb-munsell': return Munsell.fromXYZ(XYZ.fromLRGB(vs));\n\t\tcase 'xyz-munsell' : return Munsell.fromXYZ(vs);\n\t\tcase 'yxy-munsell' : return Munsell.fromXYZ(XYZ.fromYxy(vs));\n\t\tcase 'lab-munsell' : return Munsell.fromXYZ(XYZ.fromLab(vs));\n\t\tcase 'lms-munsell' : return Munsell.fromXYZ(XYZ.fromLMS(vs));\n\t\tcase 'pccs-munsell': return Munsell.fromPCCS(vs);\n\n\t\tcase 'rgb-pccs'    : return PCCS.fromMunsell(Munsell.fromXYZ(XYZ.fromLRGB(LRGB.fromRGB(vs))));\n\t\tcase 'yiq-pccs'    : return PCCS.fromMunsell(Munsell.fromXYZ(XYZ.fromLRGB(LRGB.fromYIQ(vs))));\n\t\tcase 'lrgb-pccs'   : return PCCS.fromMunsell(Munsell.fromXYZ(XYZ.fromLRGB(vs)));\n\t\tcase 'xyz-pccs'    : return PCCS.fromMunsell(Munsell.fromXYZ(vs));\n\t\tcase 'yxy-pccs'    : return PCCS.fromMunsell(Munsell.fromXYZ(XYZ.fromYxy(vs)));\n\t\tcase 'lab-pccs'    : return PCCS.fromMunsell(Munsell.fromXYZ(XYZ.fromLab(vs)));\n\t\tcase 'lms-pccs'    : return PCCS.fromMunsell(Munsell.fromXYZ(XYZ.fromLMS(vs)));\n\t\tcase 'munsell-pccs': return PCCS.fromMunsell(vs);\n\t}\n\treturn vs;\n}\n\nexport function isRGBSaturated(): boolean {\n\treturn RGB.isSaturated;\n}\n\nexport function isYxySaturated(): boolean {\n\treturn Yxy.isSaturated;\n}\n\nexport function isMunsellSaturated(): boolean {\n\treturn Munsell.isSaturated;\n}\n", "/**\n * This class performs various simulations of color space.\n *\n * @author Takuto Yanagida\n * @version 2024-07-25\n */\n\nimport { Triplet } from './_triplet';\n\nexport class AgeSimulation {\n\t/*\n\t * Color vision age-related change simulation (conversion other than lightness)\n\t * Reference: Katsunori Okajima, Human Color Vision Mechanism and its Age-Related Change,\n\t * IEICE technical report 109(249), 43-48, 2009-10-15.\n\t */\n\n\tprivate static _hueDiff(a: number, b: number): number {\n\t\tconst p = (b > 0) ? Math.atan2(b, a) : (Math.atan2(-b, -a) + Math.PI);\n\t\treturn 4.5 * Math.cos(2 * Math.PI * (p - 28.8) / 50.9) + 4.4;\n\t}\n\n\tprivate static _chromaRatio(a: number, b: number): number {\n\t\tconst c = Math.sqrt(a * a + b * b);\n\t\treturn 0.83 * Math.exp(-c / 13.3) - (1 / 8) * Math.exp(-(c - 50) * (c - 50) / (3000 * 3000)) + 1;\n\t}\n\n\t/**\n\t * Convert CIELAB (L*a*b*) to CIELAB in the color vision of elderly people (70 years old) (conversion other than lightness).\n\t * @param {number[]} lab L*, a*, b* of CIELAB color (young person)\n\t * @return {number[]} CIELAB color in color vision of elderly people\n\t */\n\tstatic labToElderlyAB([ls, as, bs]: Triplet): Triplet {\n\t\tconst h = ((bs > 0) ? Math.atan2(bs, as) : (Math.atan2(-bs, -as) + Math.PI)) + AgeSimulation._hueDiff(as, bs);\n\t\tconst c = Math.sqrt(as * as + bs * bs) * AgeSimulation._chromaRatio(as, bs);\n\t\treturn [\n\t\t\tls,\n\t\t\tMath.cos(h) * c,\n\t\t\tMath.sin(h) * c,\n\t\t];\n\t}\n\n\t/**\n\t * Convert CIELAB (L*a*b*) to CIELAB in the color vision of young people (20 years old) (conversion other than lightness).\n\t * @param {number[]} lab L*, a*, b* of CIELAB color (elderly person)\n\t * @return {number[]} CIELAB color in color vision of young people\n\t */\n\tstatic labToYoungAB([ls, as, bs]: Triplet): Triplet {\n\t\tconst h = ((bs > 0) ? Math.atan2(bs, as) : (Math.atan2(-bs, -as) + Math.PI)) - AgeSimulation._hueDiff(as, bs);\n\t\tconst c = Math.sqrt(as * as + bs * bs) / AgeSimulation._chromaRatio(as, bs);\n\t\treturn [\n\t\t\tls,\n\t\t\tMath.cos(h) * c,\n\t\t\tMath.sin(h) * c,\n\t\t];\n\t}\n}\n"],
  "mappings": "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",
  "names": ["_CC_TABLE", "Evaluation", "_Evaluation", "as", "bs", "H", "a", "v11", "v12", "v13", "v21", "v22", "v23", "ls1", "as1", "bs1", "ls2", "as2", "bs2", "C1", "C2", "Cb", "G", "ap1", "ap2", "Cp1", "Cp2", "hp1", "atan", "hp2", "DLp", "DCp", "Dhp", "DHp", "sin", "Lbp", "Cbp", "hbp", "T", "cos", "Dth", "sq", "RC", "SL", "SC", "SH", "RT", "kL", "kC", "kH", "v", "y", "x", "deg", "lab1", "lab2", "method", "sx", "sy", "lum", "diff", "clu", "l", "d", "t", "dis", "cc", "i", "ci", "_CC_TABLE", "Lab", "_Lab", "v", "x", "y", "z", "fx", "fy", "fz", "ls", "as", "bs", "lab", "Evaluation", "lab1", "lab2", "rad", "cs", "h", "YIQ", "lr", "lg", "lb", "y", "i", "q", "LRGB", "lr", "lg", "lb", "x", "y", "z", "lrgb", "RGB", "rgb", "YIQ", "yiq", "Yxy", "_Yxy", "x", "y", "z", "sum", "sx", "sy", "d0", "d1", "d2", "Lab", "yxy", "Evaluation", "LMS", "_LMS", "x", "y", "z", "l", "m", "s", "_TBL_SRC_MIN", "PCCS", "_PCCS", "H", "h1", "h2", "i", "V", "C", "h", "a", "g", "a0", "hf", "hc", "af", "ac", "x0", "a3", "a2", "a1", "x", "y", "yp", "x1", "H1", "H2", "l", "s", "Ct", "gt", "e2", "e1", "e0", "Munsell", "hls", "t", "tu", "td", "L", "hLs", "str_l", "str_h", "str_s", "tn", "hue", "tone", "Munsell", "_Munsell", "vi", "h10", "c", "v", "v2", "y", "f", "fp", "v1", "a", "b", "Y", "x", "hc", "vi_l", "hc_l", "vi_u", "hc_u", "v_l", "v_h", "r", "h", "h10_l", "h10_u", "c_l", "c_u", "hv", "out", "inner", "d", "ax", "ay", "bx", "by", "ea", "eb", "ec", "rt", "h1", "h2", "deX", "deY", "hueName", "isDigit", "len", "hue", "chroma", "xyz", "Yxy", "XYZ", "dest", "xy", "xy_l", "xy_u", "hvc", "PCCS", "hls", "rh", "rc", "maxC_hl", "maxC_hu", "xy_hl", "xy_hu", "o", "C", "cd_x", "cd_y", "ab_x", "ab_y", "str_v", "str_c", "_TBL_SRC_MIN", "_initTable", "i", "n", "cs", "c0", "_integrate", "c1", "c2", "c3", "c2_", "c3_", "XYZ", "xyz", "LRGB", "lrgb", "Yxy", "yxy", "Lab", "lab", "LMS", "lms", "Munsell", "hvc", "x", "y", "z", "RGB", "_RGB", "vs", "min", "max", "isSaturated", "x", "r", "g", "b", "lr", "lg", "lb", "dest", "v", "rgb", "Lab", "XYZ", "LRGB", "lab", "xyz", "Yxy", "yxy", "l", "ColorVisionSimulation", "_ColorVisionSimulation", "l", "m", "s", "l2", "m2", "s2", "base", "sp1", "dp0", "dp1", "dp2", "k", "sp0", "lms", "doCorrection", "ds", "lr", "lg", "lb", "lrgb2", "LMS", "XYZ", "ColorSpace", "Color", "_Color", "cs", "t", "RGB", "LRGB", "Lab", "Yxy", "LMS", "Munsell", "PCCS", "s", "Evaluation", "method", "doCorrection", "lms", "ColorVisionSimulation", "convert", "vs", "from", "to", "RGB", "LRGB", "XYZ", "Munsell", "YIQ", "Yxy", "Lab", "LMS", "PCCS", "isRGBSaturated", "isYxySaturated", "isMunsellSaturated", "AgeSimulation", "_AgeSimulation", "a", "b", "p", "c", "ls", "as", "bs", "h"]
}
